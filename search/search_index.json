{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Koala https://mkdocs-like-code.readthedocs.io/zh_CN/latest/MkDocs-advanced-operations/theme-configuration/#_1 Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#koala","text":"https://mkdocs-like-code.readthedocs.io/zh_CN/latest/MkDocs-advanced-operations/theme-configuration/#_1","title":"Koala"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Java/Java%E6%B5%81/","text":"\u6848\u4f8b Peek /** * peek */ @Test public void test12() { ArrayList<Person> peoples = Lists.newArrayList(new Person(), new Person(), new Person(), new Person(\"tom\", 1), new Person(\"koala\", 1)); final List<Person> a = peoples.stream().peek(v -> { v.setName(\"A\"); }).collect(Collectors.toList()); System.out.println(JSON.toJSONString(a)); } \u6d41\u53d8\u6362Key \u7684\u7c7b\u578b ArrayList<Person> peoples = Lists.newArrayList(new Person(\"tom\", 12), new Person(\"koala\", 1)); final Map<String, Person> collect = peoples.stream().collect(Collectors.toMap(v -> v.getAge().toString(), v -> v, (a, b) -> a)); flatMap \u4e0d\u4f1aLambda\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\uff1f\u4f60\u786e\u5b9a\u80fd\u770b\u61c2\u516c\u53f8\u4ee3\u7801\uff1f-java8\u51fd\u6570\u5f0f\u7f16\u7a0b(Lambda\u8868\u8fbe\u5f0f\uff0cOptional\uff0cStream\u6d41)\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u6700\u901a\u4fd7\u6613\u61c2_\u54d4\u54e9\u54d4\u54e9_bilibili","title":"Java\u6d41"},{"location":"Java/Java%E6%B5%81/#_1","text":"","title":"\u6848\u4f8b"},{"location":"Java/Java%E6%B5%81/#peek","text":"/** * peek */ @Test public void test12() { ArrayList<Person> peoples = Lists.newArrayList(new Person(), new Person(), new Person(), new Person(\"tom\", 1), new Person(\"koala\", 1)); final List<Person> a = peoples.stream().peek(v -> { v.setName(\"A\"); }).collect(Collectors.toList()); System.out.println(JSON.toJSONString(a)); }","title":"Peek"},{"location":"Java/Java%E6%B5%81/#key","text":"ArrayList<Person> peoples = Lists.newArrayList(new Person(\"tom\", 12), new Person(\"koala\", 1)); final Map<String, Person> collect = peoples.stream().collect(Collectors.toMap(v -> v.getAge().toString(), v -> v, (a, b) -> a));","title":"\u6d41\u53d8\u6362Key \u7684\u7c7b\u578b"},{"location":"Java/Java%E6%B5%81/#flatmap","text":"\u4e0d\u4f1aLambda\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\uff1f\u4f60\u786e\u5b9a\u80fd\u770b\u61c2\u516c\u53f8\u4ee3\u7801\uff1f-java8\u51fd\u6570\u5f0f\u7f16\u7a0b(Lambda\u8868\u8fbe\u5f0f\uff0cOptional\uff0cStream\u6d41)\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u6700\u901a\u4fd7\u6613\u61c2_\u54d4\u54e9\u54d4\u54e9_bilibili","title":"flatMap"},{"location":"Java/Java%E7%BC%96%E7%A0%81/","text":"\u53c2\u8003\u6587\u6863 \u5404\u79cd\u7f16\u7801\u4ecb\u7ecd \u95ee\u9898 1. Java\u91c7\u7528\u4ec0\u4e48\u7f16\u7801 String s1 = \"qwe\"; String s2 = \"\u79d1\u5b66\"; System.out.println(s1.length()); 3 System.out.println(s2.length()); 2 System.out.println(s1.getBytes().length); 3 System.out.println(s2.getBytes().length); 6 2. \u5c31\u662f\u4e00\u4e2a\u7f51\u5173 wo","title":"Java\u7f16\u7801"},{"location":"Java/Java%E7%BC%96%E7%A0%81/#_1","text":"\u5404\u79cd\u7f16\u7801\u4ecb\u7ecd","title":"\u53c2\u8003\u6587\u6863"},{"location":"Java/Java%E7%BC%96%E7%A0%81/#_2","text":"","title":"\u95ee\u9898"},{"location":"Java/Java%E7%BC%96%E7%A0%81/#1-java","text":"String s1 = \"qwe\"; String s2 = \"\u79d1\u5b66\"; System.out.println(s1.length()); 3 System.out.println(s2.length()); 2 System.out.println(s1.getBytes().length); 3 System.out.println(s2.getBytes().length); 6","title":"1. Java\u91c7\u7528\u4ec0\u4e48\u7f16\u7801"},{"location":"Java/Java%E7%BC%96%E7%A0%81/#2","text":"\u5c31\u662f\u4e00\u4e2a\u7f51\u5173 wo","title":"2."},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/","text":"\u4f7f\u7528\u6848\u4f8b \u5f97\u5230\u6700\u8fd1\u82e5\u5e72\u65f6\u95f4 \u65e5\u671f\u683c\u5f0f cn.hutool.core.date.DatePattern \u8ba1\u7b97\u65f6\u95f4\u95f4\u9694 LocalDateTime start = LocalDateTimeUtil.parse(\"2019-02-02T00:00:00\"); LocalDateTime end = LocalDateTimeUtil.parse(\"2020-02-02T00:00:00\"); Duration between = LocalDateTimeUtil.between(start, end); // 365 between.toDays(); \u5f00\u59cb\u65f6\u95f4\u53ef\u7ed3\u675f\u65f6\u95f4 LocalDateTime localDateTime = LocalDateTimeUtil.parse(\"2020-01-23T12:23:56\"); // \"2020-01-23T00:00\" LocalDateTime beginOfDay = LocalDateTimeUtil.beginOfDay(localDateTime); // \"2020-01-23T23:59:59.999999999\" LocalDateTime endOfDay = LocalDateTimeUtil.endOfDay(localDateTime);","title":"LocalDateTime\u5904\u7406"},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/#_1","text":"","title":"\u4f7f\u7528\u6848\u4f8b"},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/#_2","text":"","title":"\u5f97\u5230\u6700\u8fd1\u82e5\u5e72\u65f6\u95f4"},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/#_3","text":"cn.hutool.core.date.DatePattern","title":"\u65e5\u671f\u683c\u5f0f"},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/#_4","text":"LocalDateTime start = LocalDateTimeUtil.parse(\"2019-02-02T00:00:00\"); LocalDateTime end = LocalDateTimeUtil.parse(\"2020-02-02T00:00:00\"); Duration between = LocalDateTimeUtil.between(start, end); // 365 between.toDays();","title":"\u8ba1\u7b97\u65f6\u95f4\u95f4\u9694"},{"location":"Java/LocalDateTime%E5%A4%84%E7%90%86/#_5","text":"LocalDateTime localDateTime = LocalDateTimeUtil.parse(\"2020-01-23T12:23:56\"); // \"2020-01-23T00:00\" LocalDateTime beginOfDay = LocalDateTimeUtil.beginOfDay(localDateTime); // \"2020-01-23T23:59:59.999999999\" LocalDateTime endOfDay = LocalDateTimeUtil.endOfDay(localDateTime);","title":"\u5f00\u59cb\u65f6\u95f4\u53ef\u7ed3\u675f\u65f6\u95f4"},{"location":"Java/%E5%8F%8D%E5%B0%84/","text":"\u53c2\u8003\u6587\u6863 https://blog.csdn.net/qq_44715943/article/details/120587716","title":"\u53cd\u5c04"},{"location":"Java/%E5%8F%8D%E5%B0%84/#_1","text":"https://blog.csdn.net/qq_44715943/article/details/120587716","title":"\u53c2\u8003\u6587\u6863"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/","text":"1. \u52a0\u5bc6\u7b97\u6cd5\u4ecb\u7ecd \u6d45\u8c08\u5e38\u89c1\u7684\u4e03\u79cd\u52a0\u5bc6\u7b97\u6cd5\u53ca\u5b9e\u73b0 MD5\u52a0\u5bc6 \u4ecb\u7ecd \uff1a\u6458\u8981\u7b97\u6cd5 public static void main(String[] args) throws NoSuchAlgorithmException { String key = SecureUtil.md5(KEY); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); byte[] res = md5.digest(KEY.getBytes()); String codestr = new BigInteger(1,res ).toString(16); LogUtil.print(\"md5 \u52a0\u5bc6\u540e \\t %s\",key); LogUtil.print(\"Java\u539f\u751fMD5\u52a0\u5bc6 \\t %s\",codestr); } SHA1 \u4ecb\u7ecd\uff1a\u6458\u8981\u7b97\u6cd5 https://juejin.cn/post/6844903921752735757 String key = SecureUtil.sha1(\"key\"); DES \u5bf9\u79f0\u52a0\u5bc6 \u53c2\u8003\u6587\u6863 https://juejin.cn/post/6844903474430230535 @Test public void test21() { String key = \"secretaryshipKey\"; String content = \"\u8bf7\u6ce8\u610f \u8fd9\u662f\u6211\u8981\u8fdb\u884c\u52a0\u5bc6\u7684\u5185\u5bb9\"; DES des1 = SecureUtil.des(key.getBytes()); String encrypt = des1.encryptHex(content); DES des2 = SecureUtil.des(key.getBytes()); String result = des2.decryptStr(encrypt); System.out.println(String.format(\"\u52a0\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011 \\n\u52a0\u5bc6\u5bc6\u94a5\uff1a\u3010%s\u3011 \\n\u89e3\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011\",encrypt,key,result)); } AES \u5bf9\u79f0\u52a0\u5bc6 \u53c2\u8003\u6587\u6863 https://juejin.cn/post/6844903474430230535 @Test public void test21() { String key = \"secretaryshipKey\"; String content = \"\u8bf7\u6ce8\u610f \u8fd9\u662f\u6211\u8981\u8fdb\u884c\u52a0\u5bc6\u7684\u5185\u5bb9\"; AES aes1 = SecureUtil.aes(key.getBytes()); String encrypt = aes1.encryptHex(content); AES aes2 = SecureUtil.aes(key.getBytes()); String result = aes2.decryptStr(encrypt); System.out.println(String.format(\"\u52a0\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011 \\n\u52a0\u5bc6\u5bc6\u94a5\uff1a\u3010%s\u3011 \\n\u89e3\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011\",encrypt,key,result)); } \u975e\u5bf9\u79f0\u52a0\u5bc6 2. hutools \u52a0\u5bc6\u5de5\u5177\u7c7b \u53c2\u8003 SecureUtil","title":"\u5165\u95e8"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#1","text":"\u6d45\u8c08\u5e38\u89c1\u7684\u4e03\u79cd\u52a0\u5bc6\u7b97\u6cd5\u53ca\u5b9e\u73b0","title":"1. \u52a0\u5bc6\u7b97\u6cd5\u4ecb\u7ecd"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#md5","text":"\u4ecb\u7ecd \uff1a\u6458\u8981\u7b97\u6cd5 public static void main(String[] args) throws NoSuchAlgorithmException { String key = SecureUtil.md5(KEY); MessageDigest md5 = MessageDigest.getInstance(\"MD5\"); byte[] res = md5.digest(KEY.getBytes()); String codestr = new BigInteger(1,res ).toString(16); LogUtil.print(\"md5 \u52a0\u5bc6\u540e \\t %s\",key); LogUtil.print(\"Java\u539f\u751fMD5\u52a0\u5bc6 \\t %s\",codestr); }","title":"MD5\u52a0\u5bc6"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#sha1","text":"\u4ecb\u7ecd\uff1a\u6458\u8981\u7b97\u6cd5 https://juejin.cn/post/6844903921752735757 String key = SecureUtil.sha1(\"key\");","title":"SHA1"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#des","text":"\u53c2\u8003\u6587\u6863 https://juejin.cn/post/6844903474430230535 @Test public void test21() { String key = \"secretaryshipKey\"; String content = \"\u8bf7\u6ce8\u610f \u8fd9\u662f\u6211\u8981\u8fdb\u884c\u52a0\u5bc6\u7684\u5185\u5bb9\"; DES des1 = SecureUtil.des(key.getBytes()); String encrypt = des1.encryptHex(content); DES des2 = SecureUtil.des(key.getBytes()); String result = des2.decryptStr(encrypt); System.out.println(String.format(\"\u52a0\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011 \\n\u52a0\u5bc6\u5bc6\u94a5\uff1a\u3010%s\u3011 \\n\u89e3\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011\",encrypt,key,result)); }","title":"DES \u5bf9\u79f0\u52a0\u5bc6"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#aes","text":"\u53c2\u8003\u6587\u6863 https://juejin.cn/post/6844903474430230535 @Test public void test21() { String key = \"secretaryshipKey\"; String content = \"\u8bf7\u6ce8\u610f \u8fd9\u662f\u6211\u8981\u8fdb\u884c\u52a0\u5bc6\u7684\u5185\u5bb9\"; AES aes1 = SecureUtil.aes(key.getBytes()); String encrypt = aes1.encryptHex(content); AES aes2 = SecureUtil.aes(key.getBytes()); String result = aes2.decryptStr(encrypt); System.out.println(String.format(\"\u52a0\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011 \\n\u52a0\u5bc6\u5bc6\u94a5\uff1a\u3010%s\u3011 \\n\u89e3\u5bc6\u7ed3\u679c\uff1a\u3010%s\u3011\",encrypt,key,result)); }","title":"AES \u5bf9\u79f0\u52a0\u5bc6"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#_1","text":"","title":"\u975e\u5bf9\u79f0\u52a0\u5bc6"},{"location":"Java/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/%E5%85%A5%E9%97%A8/#2-hutools","text":"\u53c2\u8003 SecureUtil","title":"2. hutools \u52a0\u5bc6\u5de5\u5177\u7c7b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/ThreadLoacl/","text":"","title":"ThreadLoacl"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/volatile/","text":"","title":"Volatile"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/","text":"\u53c2\u8003\u5185\u5bb9 https://github.com/Wang-Jun-Chao/java-concurrency https://github.com/Fadezed/concurrency yontube\u89c6\u9891 \u5b66\u4e60\u7b14\u8bb0 \u5b66\u4e60\u65e5\u5fd7 Java \u7684\u4e09\u79cd\u521b\u5efa\u65b9\u5f0f \u4ee3\u7801 // \u521b\u5efa\u65b9\u5f0f1 public class Start1 { public static void main(String[] args) { System.out.println(\"main start\"); new Thread(()->{ for(int i = 0;i < 10 ;i++){ System.out.println(i); } }).start(); System.out.println(\"main end\"); } } // \u521b\u5efa\u65b9\u5f0f2 public class MyThread implements Runnable { public static int tickets = 20; @Override public void run() { if(tickets > 0){ System.out.println(\"current tickets :\" + tickets); } } public static void main(String[] args) { System.out.println(\"main start\"); MyThread thread = new MyThread(); Thread mThread1=new Thread(thread,\"\u7ebf\u7a0b1\"); Thread mThread2=new Thread(thread,\"\u7ebf\u7a0b2\"); Thread mThread3=new Thread(thread,\"\u7ebf\u7a0b3\"); mThread1.start(); mThread2.start(); mThread3.start(); System.out.println(\"main end\"); } } // \u521b\u5efa\u65b9\u5f0f3 public class MyThreadCall implements Callable<Integer> { @Override public Integer call() throws Exception { System.out.println(\"\u5373\u5c06\u8fd4\u56de\u7ed9\u4f60 \u4e00\u4e2a\u6570\u5b57\"); return RandomUtil.randomInt(); } public static void main(String[] args) throws Exception { System.out.println(\"main start\"); MyThreadCall callable = new MyThreadCall(); //Integer call = callable.call(); //System.out.println(call); FutureTask <Integer>futureTask=new FutureTask<>(callable); Thread thread = new Thread(futureTask); thread.start(); System.out.println(\"main end\"); } } \u95ee\u9898 \u4e3a\u4ec0\u4e48\u6709\u4e86\u7ee7\u627fThread \u8fd8\u8981\u5b9e\u73b0Runnable \u907f\u514d\u5355\u7ee7\u627f\u7684\u5c40\u9650\u6027 \u66f4\u597d\u63d0\u73b0\u5171\u4eab\u7684\u6982\u5ff5 \u7ebf\u7a0b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ec0\u4e48\u6837\u7684 \u521b\u5efa\u7ebf\u7a0b\u4efb\u52a1\u2192 \u653e\u8fdb\u7ebf\u7a0b\u91cc\u9762 Java \u7684\u5185\u5b58\u6a21\u578b \u53c2\u8003\u5185\u5bb9 Java \u5e76\u53d1\u7f16\u7a0b\u7684\u827a\u672f \u2192 Java \u7684\u5185\u5b58\u6a21\u578b \u7b14\u8bb0 \u5e76\u53d1\u7f16\u7a0b\u7684\u4e24\u4e2a\u5173\u952e\u95ee\u9898 \u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u548c\u901a\u4fe1 \u901a\u4fe1\u53ef\u4ee5\u901a\u8fc7 \u5171\u4eab\u5185\u5b58 \u6216\u8005 \u6d88\u606f\u4f20\u9012 \u4ec0\u4e48\u53eb\u53ef\u89c1\u6027 \u4ec0\u4e48\u53eb\u6709\u5e8f\u6027 \u7ebf\u7a0b\u4fee\u6539\u53d8\u91cf\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1 \u8349\u7a3f \u5982\u679c\u7f16\u5199\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684Java\u7a0b\u5e8f\u5458\u4e0d\u7406\u89e3\u9690\u5f0f\u8fdb\u884c\u7684\u7ebf\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u5de5\u4f5c\u673a\u5236\uff0c\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5947\u602a\u7684\u5185\u5b58\u53ef\u89c1\u6027\u95ee\u9898 Java \u4e2d\u9759\u6001\u57df\u6570\u7ec4\u5143\u7d20\u90fd\u5b58\u5728\u5806\u5185\u5b58\u4e2d, \u5806\u5185\u5b58\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u5c40\u90e8\u53d8\u91cf\u7ebf\u7a0b\u4e4b\u95f4\u4e0d\u5171\u4eab\u4e0d\u5b58\u5728\u53ef\u89c1\u6027\u95ee\u9898\u3002 JMM \u63a7\u5236Java \u7684\u7ebf\u7a0b\u901a\u4fe1\uff0c\u5b9a\u4e49\u4e86\u7ebf\u7a0b\u548c\u4e3b\u5185\u5b58\u7684\u62bd\u8c61\u5173\u7cfb\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u672c\u5730\u5185\u5b58\uff08Local Memory\uff09\uff0c\u672c\u5730\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u4ee5\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c \u672c\u5730\u5185\u5b58\u53ea\u662f\u4e00\u4e2a\u62bd\u8c61\u5b58\u5728 \u5305\u542b\u4e86\u7f13\u5b58\u3001\u5199\u7f13\u51b2\u533a\u3001\u5bc4\u5b58\u5668\u4ee5\u53ca\u5176\u4ed6\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5668\u4f18\u5316 \u7f13\u5b58\u56fe\u7247 \u91cd\u6392\u5e8f\u7684\u4e09\u79cd\u7c7b\u578b \u7f16\u8bd1\u5668\u4f18\u5316\u91cd\u6392\u5e8f \u6307\u4ee4\u96c6\u5e76\u884c\u91cd\u6392\u5e8f \u5185\u5b58\u7cfb\u7edf\u91cd\u6392\u5e8f \u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 \u5176\u4ed6\u4e24\u4e2a\u4e0d\u77e5\u9053\u4ec0\u4e48\u610f\u601d before-after\u5173\u7cfb \u524d\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u540e\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1 \u53c2\u8003 happens-before\u662f\u4ec0\u4e48\uff1fJMM\u6700\u6700\u6838\u5fc3\u7684\u6982\u5ff5\uff0c\u770b\u5b8c\u4f60\u5c31\u61c2\u4e86 - \u77e5\u4e4e (zhihu.com) Java \u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840 \u4ee3\u7801 \u4f18\u96c5\u7684\u4e2d\u65ad\u4ee3\u7801 ```java package com.koala.chapter4; import java.util.concurrent.TimeUnit; /* * * \u4f18\u96c5\u7684\u4e2d\u6b62\u7ebf\u7a0b * @author yantingrui * @date 2022/2/22 22:03 / public class ShutDown { public static void main(String[] args) throws InterruptedException { Runner run1 = new Runner(); Thread one = new Thread(run1, \"one\"); one.start(); SleepUtils.second(1); one.interrupt(); Runner run2 = new Runner(); one = new Thread(run2, \"two\"); one.start(); SleepUtils.second(1); run2.cancel(); } private static class Runner implements Runnable{ protected long i; private volatile boolean on = true; @Override public void run() { while(on & !Thread.currentThread().isInterrupted()){ i++; } System.out.println(\"count : \" + i ); } public void cancel(){ this.on = false; } } } ``` \u7b49\u5f85\u901a\u77e5 ```java package com.koala.chapter4; import lombok.SneakyThrows; import lombok.extern.slf4j.Slf4j; /* * \u63cf\u8ff0\u573a\u666f * \u5bbf\u820d\u4e00\u5f20\u7a7a\u8c03\u5361 \u820d\u53cb\u62ff\u7740\u53bb\u7a7a\u8c03\u5361\u53bb\u51b2\u7a7a\u8c03 \u51b2\u5230\u7a7a\u8c03\u8ba9\u5ba4\u53cb\u901a\u77e5\u662f\u5426\u51b2\u4e0a * @author yantingrui * @date 2022/2/22 23:23 / @Slf4j public class NotifyTest { // \u662f\u5426\u7a7a\u8c03\u6709\u7535 static boolean flag = false; // \u9501\u4f4f\u7a7a\u8c03\u5361 static Object lock = new Object(); public static void main(String[] args) { Thread sitian1 = new Thread(new Waiter(), \"\u601d\u751c1\"); Thread sitian2 = new Thread(new Waiter(), \"\u601d\u751c2\"); Thread sitian3 = new Thread(new Waiter(), \"\u601d\u751c3\"); sitian1.start(); sitian2.start(); sitian3.start(); Thread qingjia = new Thread(new Friend(), \"\u537f\u5bb6\"); qingjia.start(); } static class Waiter implements Runnable{ @SneakyThrows @Override public void run() { // \u8fdb\u5165\u5ba2\u6237\u7684\u623f\u95f4\u628a\u623f\u95f4\u9501\u4f4f synchronized (lock){ // \u5224\u65ad\u5ba2\u6237\u662f\u5426\u9700\u8981\u6c34 while(!flag){ log.info(\"{} \u7ed9\u7a7a\u8c03\u51b2\u4e86\u7535\u8d39\",Thread.currentThread().getName()); // \u628a\u7a7a\u8c03\u5361\u653e\u56de\u53bb lock.wait(); } log.info(\"\u7a7a\u8c03\u6709\u7535\u4e86 {}\u88ab\u901a\u77e5\u56de\u6765\",Thread.currentThread().getName()); } } } static class Friend implements Runnable{ @Override public void run() { // \u5ba4\u53cb\u5728\u5bbf\u820d\u770b\u662f\u5426\u53ef\u4ee5\u62ff\u5230\u7a7a\u8c03\u5361 synchronized (lock){ log.info(\"\u5ba4\u53cb{}\u62ff\u5230\u7a7a\u8c03\u5361 \u63d2\u5165\u5361\u69fd \u5bbf\u820d\u6765\u7535\u901a\u77e5\u5145\u5361\u7684\",Thread.currentThread().getName()); flag = true; lock.notifyAll(); } } } } ``` \u7ba1\u9053\u901a\u4fe1 ```java package com.koala.chapter4; import lombok.SneakyThrows; import java.io.*; /* * \u7ba1\u9053\u6d41\u901a\u4fe1 * \u5b9a\u4e49\u4e00\u4e2a\u4eba\u7ed9\u53e6\u5916\u4e00\u4e2a\u4eba\u53d1\u5fae\u4fe1 * @author yantingrui * @date 2022/2/23 9:06 / public class Piped { public static void main(String[] args) throws IOException { // \u5199\u4fe1 PipedWriter out = new PipedWriter(); // \u8bfb\u4fe1\u7684\u4eba PipedReader in = new PipedReader(); out.connect(in); Thread sitian = new Thread(new Person(in), \"sitian\"); sitian.start(); int reveive = 0; while((reveive = System.in.read()) != -1){ out.write(reveive); } } static class Person implements Runnable{ //\u4eba\u6709\u9605\u8bfb\u7684\u80fd\u529b private PipedReader in; public Person(PipedReader in) { this.in = in; } @SneakyThrows @Override public void run() { int receive = 0; while((receive=in.read()) != 0){ System.out.print((char)receive); } } } } ``` \u95ee\u9898 Thread.sleep(1000) \u7684\u64cd\u4f5c \u7ebf\u7a0b\u4e0d\u4f1a\u91ca\u653e\u9501 \u5176\u4ed6\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u4e0d\u53bb \u6709\u4e86synchronize \u4e3a\u4ec0\u4e48\u8fd8\u8981Lock Java\u4e2d\u7684\u9501 \u53cc\u80de\u80ce\u9501 Java\u5e76\u53d1\u5bb9\u5668\u548c\u6846\u67b6 \u5e76\u53d1\u5bb9\u5668 \u963b\u585e\u961f\u5217 Join fork \u65b9\u6cd5 Java 13\u4e2a\u5e76\u53d1\u539f\u5b50\u7c7b Java \u5e76\u53d1\u5de5\u5177\u7c7b CyclicBarrier CountDownLatch CountDownLatch\u7684\u8ba1\u6570\u5668\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u800cCyclicBarrier\u7684\u8ba1\u6570\u5668\u53ef\u4ee5\u4f7f\u7528reset()\u65b9\u6cd5\u91cd \u7f6e\u3002\u6240\u4ee5CyclicBarrier\u80fd\u5904\u7406\u66f4\u4e3a\u590d\u6742\u7684\u4e1a\u52a1\u573a\u666f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u7b97\u53d1\u751f\u9519\u8bef\uff0c\u53ef\u4ee5\u91cd\u7f6e\u8ba1\u6570 \u5668\uff0c\u5e76\u8ba9\u7ebf\u7a0b\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u3002 \u5b66\u4e60\u5168\u56fe \u95ee\u9898 synchronized \u548c Lock \u7684\u533a\u522b Synchronized\u548cLock\u6bd4\u8f83. Synchronized\u662f\u5173\u952e\u5b57\uff0c\u5185\u7f6e\u8bed\u8a00\u5b9e\u73b0\uff0cLock\u662f\u63a5\u53e3\u3002. Synchronized\u5728\u7ebf\u7a0b\u53d1\u751f\u5f02\u5e38\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d1\u751f\u5f02\u5e38\u6b7b\u9501\u3002. Lock\u5f02\u5e38\u65f6\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u6240\u4ee5\u9700\u8981\u5728finally\u4e2d\u5b9e\u73b0\u91ca\u653e\u9501\u3002. Lock\u662f\u53ef\u4ee5\u4e2d\u65ad\u9501\uff0cSynchronized\u662f\u975e\u4e2d\u65ad\u9501\uff0c\u5fc5\u987b\u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u91ca\u653e\u9501\u3002. Lock\u53ef\u4ee5\u4f7f\u7528\u8bfb\u9501\u63d0\u9ad8\u591a\u7ebf\u7a0b\u8bfb\u6548\u7387","title":"\u5e76\u53d1\u7f16\u7a0b notion"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_1","text":"https://github.com/Wang-Jun-Chao/java-concurrency https://github.com/Fadezed/concurrency yontube\u89c6\u9891","title":"\u53c2\u8003\u5185\u5bb9"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_2","text":"","title":"\u5b66\u4e60\u7b14\u8bb0"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_3","text":"","title":"\u5b66\u4e60\u65e5\u5fd7"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java","text":"","title":"Java \u7684\u4e09\u79cd\u521b\u5efa\u65b9\u5f0f"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_4","text":"// \u521b\u5efa\u65b9\u5f0f1 public class Start1 { public static void main(String[] args) { System.out.println(\"main start\"); new Thread(()->{ for(int i = 0;i < 10 ;i++){ System.out.println(i); } }).start(); System.out.println(\"main end\"); } } // \u521b\u5efa\u65b9\u5f0f2 public class MyThread implements Runnable { public static int tickets = 20; @Override public void run() { if(tickets > 0){ System.out.println(\"current tickets :\" + tickets); } } public static void main(String[] args) { System.out.println(\"main start\"); MyThread thread = new MyThread(); Thread mThread1=new Thread(thread,\"\u7ebf\u7a0b1\"); Thread mThread2=new Thread(thread,\"\u7ebf\u7a0b2\"); Thread mThread3=new Thread(thread,\"\u7ebf\u7a0b3\"); mThread1.start(); mThread2.start(); mThread3.start(); System.out.println(\"main end\"); } } // \u521b\u5efa\u65b9\u5f0f3 public class MyThreadCall implements Callable<Integer> { @Override public Integer call() throws Exception { System.out.println(\"\u5373\u5c06\u8fd4\u56de\u7ed9\u4f60 \u4e00\u4e2a\u6570\u5b57\"); return RandomUtil.randomInt(); } public static void main(String[] args) throws Exception { System.out.println(\"main start\"); MyThreadCall callable = new MyThreadCall(); //Integer call = callable.call(); //System.out.println(call); FutureTask <Integer>futureTask=new FutureTask<>(callable); Thread thread = new Thread(futureTask); thread.start(); System.out.println(\"main end\"); } }","title":"\u4ee3\u7801"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_5","text":"\u4e3a\u4ec0\u4e48\u6709\u4e86\u7ee7\u627fThread \u8fd8\u8981\u5b9e\u73b0Runnable \u907f\u514d\u5355\u7ee7\u627f\u7684\u5c40\u9650\u6027 \u66f4\u597d\u63d0\u73b0\u5171\u4eab\u7684\u6982\u5ff5 \u7ebf\u7a0b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ec0\u4e48\u6837\u7684 \u521b\u5efa\u7ebf\u7a0b\u4efb\u52a1\u2192 \u653e\u8fdb\u7ebf\u7a0b\u91cc\u9762","title":"\u95ee\u9898"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java_1","text":"","title":"Java \u7684\u5185\u5b58\u6a21\u578b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_6","text":"Java \u5e76\u53d1\u7f16\u7a0b\u7684\u827a\u672f \u2192 Java \u7684\u5185\u5b58\u6a21\u578b","title":"\u53c2\u8003\u5185\u5bb9"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_7","text":"\u5e76\u53d1\u7f16\u7a0b\u7684\u4e24\u4e2a\u5173\u952e\u95ee\u9898 \u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u548c\u901a\u4fe1 \u901a\u4fe1\u53ef\u4ee5\u901a\u8fc7 \u5171\u4eab\u5185\u5b58 \u6216\u8005 \u6d88\u606f\u4f20\u9012","title":"\u7b14\u8bb0"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_8","text":"\u7ebf\u7a0b\u4fee\u6539\u53d8\u91cf\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1","title":"\u4ec0\u4e48\u53eb\u53ef\u89c1\u6027 \u4ec0\u4e48\u53eb\u6709\u5e8f\u6027"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_9","text":"\u5982\u679c\u7f16\u5199\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684Java\u7a0b\u5e8f\u5458\u4e0d\u7406\u89e3\u9690\u5f0f\u8fdb\u884c\u7684\u7ebf\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u5de5\u4f5c\u673a\u5236\uff0c\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5947\u602a\u7684\u5185\u5b58\u53ef\u89c1\u6027\u95ee\u9898 Java \u4e2d\u9759\u6001\u57df\u6570\u7ec4\u5143\u7d20\u90fd\u5b58\u5728\u5806\u5185\u5b58\u4e2d, \u5806\u5185\u5b58\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u5c40\u90e8\u53d8\u91cf\u7ebf\u7a0b\u4e4b\u95f4\u4e0d\u5171\u4eab\u4e0d\u5b58\u5728\u53ef\u89c1\u6027\u95ee\u9898\u3002 JMM \u63a7\u5236Java \u7684\u7ebf\u7a0b\u901a\u4fe1\uff0c\u5b9a\u4e49\u4e86\u7ebf\u7a0b\u548c\u4e3b\u5185\u5b58\u7684\u62bd\u8c61\u5173\u7cfb\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u672c\u5730\u5185\u5b58\uff08Local Memory\uff09\uff0c\u672c\u5730\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u4ee5\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c \u672c\u5730\u5185\u5b58\u53ea\u662f\u4e00\u4e2a\u62bd\u8c61\u5b58\u5728 \u5305\u542b\u4e86\u7f13\u5b58\u3001\u5199\u7f13\u51b2\u533a\u3001\u5bc4\u5b58\u5668\u4ee5\u53ca\u5176\u4ed6\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5668\u4f18\u5316 \u7f13\u5b58\u56fe\u7247 \u91cd\u6392\u5e8f\u7684\u4e09\u79cd\u7c7b\u578b \u7f16\u8bd1\u5668\u4f18\u5316\u91cd\u6392\u5e8f \u6307\u4ee4\u96c6\u5e76\u884c\u91cd\u6392\u5e8f \u5185\u5b58\u7cfb\u7edf\u91cd\u6392\u5e8f \u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 \u5176\u4ed6\u4e24\u4e2a\u4e0d\u77e5\u9053\u4ec0\u4e48\u610f\u601d before-after\u5173\u7cfb \u524d\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u540e\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1 \u53c2\u8003 happens-before\u662f\u4ec0\u4e48\uff1fJMM\u6700\u6700\u6838\u5fc3\u7684\u6982\u5ff5\uff0c\u770b\u5b8c\u4f60\u5c31\u61c2\u4e86 - \u77e5\u4e4e (zhihu.com)","title":"\u8349\u7a3f"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java_2","text":"","title":"Java \u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_10","text":"\u4f18\u96c5\u7684\u4e2d\u65ad\u4ee3\u7801 ```java package com.koala.chapter4; import java.util.concurrent.TimeUnit; /* * * \u4f18\u96c5\u7684\u4e2d\u6b62\u7ebf\u7a0b * @author yantingrui * @date 2022/2/22 22:03 / public class ShutDown { public static void main(String[] args) throws InterruptedException { Runner run1 = new Runner(); Thread one = new Thread(run1, \"one\"); one.start(); SleepUtils.second(1); one.interrupt(); Runner run2 = new Runner(); one = new Thread(run2, \"two\"); one.start(); SleepUtils.second(1); run2.cancel(); } private static class Runner implements Runnable{ protected long i; private volatile boolean on = true; @Override public void run() { while(on & !Thread.currentThread().isInterrupted()){ i++; } System.out.println(\"count : \" + i ); } public void cancel(){ this.on = false; } } } ``` \u7b49\u5f85\u901a\u77e5 ```java package com.koala.chapter4; import lombok.SneakyThrows; import lombok.extern.slf4j.Slf4j; /* * \u63cf\u8ff0\u573a\u666f * \u5bbf\u820d\u4e00\u5f20\u7a7a\u8c03\u5361 \u820d\u53cb\u62ff\u7740\u53bb\u7a7a\u8c03\u5361\u53bb\u51b2\u7a7a\u8c03 \u51b2\u5230\u7a7a\u8c03\u8ba9\u5ba4\u53cb\u901a\u77e5\u662f\u5426\u51b2\u4e0a * @author yantingrui * @date 2022/2/22 23:23 / @Slf4j public class NotifyTest { // \u662f\u5426\u7a7a\u8c03\u6709\u7535 static boolean flag = false; // \u9501\u4f4f\u7a7a\u8c03\u5361 static Object lock = new Object(); public static void main(String[] args) { Thread sitian1 = new Thread(new Waiter(), \"\u601d\u751c1\"); Thread sitian2 = new Thread(new Waiter(), \"\u601d\u751c2\"); Thread sitian3 = new Thread(new Waiter(), \"\u601d\u751c3\"); sitian1.start(); sitian2.start(); sitian3.start(); Thread qingjia = new Thread(new Friend(), \"\u537f\u5bb6\"); qingjia.start(); } static class Waiter implements Runnable{ @SneakyThrows @Override public void run() { // \u8fdb\u5165\u5ba2\u6237\u7684\u623f\u95f4\u628a\u623f\u95f4\u9501\u4f4f synchronized (lock){ // \u5224\u65ad\u5ba2\u6237\u662f\u5426\u9700\u8981\u6c34 while(!flag){ log.info(\"{} \u7ed9\u7a7a\u8c03\u51b2\u4e86\u7535\u8d39\",Thread.currentThread().getName()); // \u628a\u7a7a\u8c03\u5361\u653e\u56de\u53bb lock.wait(); } log.info(\"\u7a7a\u8c03\u6709\u7535\u4e86 {}\u88ab\u901a\u77e5\u56de\u6765\",Thread.currentThread().getName()); } } } static class Friend implements Runnable{ @Override public void run() { // \u5ba4\u53cb\u5728\u5bbf\u820d\u770b\u662f\u5426\u53ef\u4ee5\u62ff\u5230\u7a7a\u8c03\u5361 synchronized (lock){ log.info(\"\u5ba4\u53cb{}\u62ff\u5230\u7a7a\u8c03\u5361 \u63d2\u5165\u5361\u69fd \u5bbf\u820d\u6765\u7535\u901a\u77e5\u5145\u5361\u7684\",Thread.currentThread().getName()); flag = true; lock.notifyAll(); } } } } ``` \u7ba1\u9053\u901a\u4fe1 ```java package com.koala.chapter4; import lombok.SneakyThrows; import java.io.*; /* * \u7ba1\u9053\u6d41\u901a\u4fe1 * \u5b9a\u4e49\u4e00\u4e2a\u4eba\u7ed9\u53e6\u5916\u4e00\u4e2a\u4eba\u53d1\u5fae\u4fe1 * @author yantingrui * @date 2022/2/23 9:06 / public class Piped { public static void main(String[] args) throws IOException { // \u5199\u4fe1 PipedWriter out = new PipedWriter(); // \u8bfb\u4fe1\u7684\u4eba PipedReader in = new PipedReader(); out.connect(in); Thread sitian = new Thread(new Person(in), \"sitian\"); sitian.start(); int reveive = 0; while((reveive = System.in.read()) != -1){ out.write(reveive); } } static class Person implements Runnable{ //\u4eba\u6709\u9605\u8bfb\u7684\u80fd\u529b private PipedReader in; public Person(PipedReader in) { this.in = in; } @SneakyThrows @Override public void run() { int receive = 0; while((receive=in.read()) != 0){ System.out.print((char)receive); } } } } ```","title":"\u4ee3\u7801"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_11","text":"Thread.sleep(1000) \u7684\u64cd\u4f5c \u7ebf\u7a0b\u4e0d\u4f1a\u91ca\u653e\u9501 \u5176\u4ed6\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u4e0d\u53bb \u6709\u4e86synchronize \u4e3a\u4ec0\u4e48\u8fd8\u8981Lock","title":"\u95ee\u9898"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java_3","text":"\u53cc\u80de\u80ce\u9501","title":"Java\u4e2d\u7684\u9501"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java_4","text":"\u5e76\u53d1\u5bb9\u5668 \u963b\u585e\u961f\u5217 Join fork \u65b9\u6cd5","title":"Java\u5e76\u53d1\u5bb9\u5668\u548c\u6846\u67b6"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java-13","text":"","title":"Java 13\u4e2a\u5e76\u53d1\u539f\u5b50\u7c7b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#java_5","text":"CyclicBarrier CountDownLatch CountDownLatch\u7684\u8ba1\u6570\u5668\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u800cCyclicBarrier\u7684\u8ba1\u6570\u5668\u53ef\u4ee5\u4f7f\u7528reset()\u65b9\u6cd5\u91cd \u7f6e\u3002\u6240\u4ee5CyclicBarrier\u80fd\u5904\u7406\u66f4\u4e3a\u590d\u6742\u7684\u4e1a\u52a1\u573a\u666f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u7b97\u53d1\u751f\u9519\u8bef\uff0c\u53ef\u4ee5\u91cd\u7f6e\u8ba1\u6570 \u5668\uff0c\u5e76\u8ba9\u7ebf\u7a0b\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u3002","title":"Java \u5e76\u53d1\u5de5\u5177\u7c7b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_12","text":"","title":"\u5b66\u4e60\u5168\u56fe"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-notion/#_13","text":"synchronized \u548c Lock \u7684\u533a\u522b Synchronized\u548cLock\u6bd4\u8f83. Synchronized\u662f\u5173\u952e\u5b57\uff0c\u5185\u7f6e\u8bed\u8a00\u5b9e\u73b0\uff0cLock\u662f\u63a5\u53e3\u3002. Synchronized\u5728\u7ebf\u7a0b\u53d1\u751f\u5f02\u5e38\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d1\u751f\u5f02\u5e38\u6b7b\u9501\u3002. Lock\u5f02\u5e38\u65f6\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u6240\u4ee5\u9700\u8981\u5728finally\u4e2d\u5b9e\u73b0\u91ca\u653e\u9501\u3002. Lock\u662f\u53ef\u4ee5\u4e2d\u65ad\u9501\uff0cSynchronized\u662f\u975e\u4e2d\u65ad\u9501\uff0c\u5fc5\u987b\u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u91ca\u653e\u9501\u3002. Lock\u53ef\u4ee5\u4f7f\u7528\u8bfb\u9501\u63d0\u9ad8\u591a\u7ebf\u7a0b\u8bfb\u6548\u7387","title":"\u95ee\u9898"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","text":"\u53c2\u8003\u4e66\u7c4d https://weread.qq.com/web/reader/9b93254072456ac19b9a176kc20321001cc20ad4d76f5ae \u5fae\u8f6f\u5e76\u53d1\u7f16\u7a0b \u5168\u666f\u56fe \u65b9\u6cd5\u7c7b \u4e0d\u8981\u9677\u8fdb\u53bb \u5168\u5c40\u8bbe\u8ba1 \u4ee5\u6848\u4f8b\u6765\u5b66\u4e60 \u5b9e\u73b0\u76ee\u6807 \u7406\u89e3Java \u5b9e\u73b0\u7684\u5404\u9879API \u5b9e\u73b0\u6848\u4f8b \u95ee\u9898\u63cf\u8ff0 \u4e00\u4e2a\u4eba\u9700\u8981\u4e24\u652f\u7b77\u5b50\u624d\u80fd\u5403\u996d \u56db\u4e2a\u4eba\u56db\u652f\u7b77\u5b50\uff0c\u5b8c\u6210\u6574\u4e2a\u5403\u996d\u52a8\u4f5c \u8349\u7a3f CPU \u5bc6\u96c6\u578b\u7a0b\u5e8f\u521b\u5efa\u591a\u5c11\u4e2a\u7ebf\u7a0b\u5408\u9002 \u8ba1\u7b97\uff08CPU\uff09\u5bc6\u96c6\u578b\u7684\u7ebf\u7a0b\u6070\u597d\u5728\u67d0\u65f6\u56e0\u4e3a\u53d1\u2f63\u2f00\u4e2a\u2eda\u9519\u8bef\u6216\u8005\u56e0\u5176\u4ed6\u539f\u56e0\u2f7d\u6682\u505c\uff0c\u521a\u597d\u6709\u2f00\u4e2a\u201c\u989d\u5916\u201d\u7684\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0bCPU\u5468\u671f\u4e0d\u4f1a\u4e2d\u65ad\u2f2f CPU\u5229\u7528\u7387\u7684\u5012\u6570\u4e58\u4ee5\u6838\u5fc3\u6570 \u95ee\u9898 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u5e76\u53d1\u95ee\u9898 \u56e0\u4e3a\u9ad8\u7ea7\u8bed\u8a00\u7684\u4e00\u53e5\u5728\u6c47\u7f16\u91cc\u9762\u53ef\u80fd\u662f\u51e0\u53e5\u3002 \u7406\u89e3\u6c47\u7f16\u6307\u4ee4 \u673a\u5668\u7801 \u548c\u9ad8\u7ea7\u8bed\u8a00\u7684\u5173\u7cfb \u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u540c\u6b65\u6709\u90a3\u4e9b\u65b9\u5f0f \u53c2\u8003 \u4e34\u754c\u533a\u4e34\u754c\u533a\u7c7b\u4f3c\u4e8e\u4ee3\u7801\u5165\u53e3\u6709\u4e00\u4e2a\u68c0\u7968\u5458\u53ea\u8981\u4e00\u5f20\u7968\u62ff\u5230\u624d\u53ef\u4ee5\u8fdb\u53bb \u7531\u8fdb\u7a0b\u7ef4\u62a4 \u4e92\u65a5\u5bf9\u8c61\uff1a \u4fe1\u53f7\u91cf \u603b\u7ed3 \u7406\u89e3\u5e76\u53d1\u95ee\u9898\uff0c\u9700\u8981\u4ece\u9ad8\u9636\u7406\u89e3\u3002 \u7406\u89e3java\u7f16\u8bd1\u5668\u8bed\u8a00C\u8bed\u8a00\u7684\u591a\u7ebf\u7a0b\u673a\u5236\u3002 \u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u540c\u6b65\u673a\u5236","title":"\u5e76\u53d1\u7f16\u7a0b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_1","text":"https://weread.qq.com/web/reader/9b93254072456ac19b9a176kc20321001cc20ad4d76f5ae \u5fae\u8f6f\u5e76\u53d1\u7f16\u7a0b","title":"\u53c2\u8003\u4e66\u7c4d"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_2","text":"","title":"\u5168\u666f\u56fe"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_3","text":"\u4e0d\u8981\u9677\u8fdb\u53bb \u5168\u5c40\u8bbe\u8ba1 \u4ee5\u6848\u4f8b\u6765\u5b66\u4e60","title":"\u65b9\u6cd5\u7c7b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_4","text":"\u7406\u89e3Java \u5b9e\u73b0\u7684\u5404\u9879API","title":"\u5b9e\u73b0\u76ee\u6807"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_5","text":"","title":"\u5b9e\u73b0\u6848\u4f8b"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_6","text":"","title":"\u95ee\u9898\u63cf\u8ff0 \u4e00\u4e2a\u4eba\u9700\u8981\u4e24\u652f\u7b77\u5b50\u624d\u80fd\u5403\u996d \u56db\u4e2a\u4eba\u56db\u652f\u7b77\u5b50\uff0c\u5b8c\u6210\u6574\u4e2a\u5403\u996d\u52a8\u4f5c"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_7","text":"CPU \u5bc6\u96c6\u578b\u7a0b\u5e8f\u521b\u5efa\u591a\u5c11\u4e2a\u7ebf\u7a0b\u5408\u9002 \u8ba1\u7b97\uff08CPU\uff09\u5bc6\u96c6\u578b\u7684\u7ebf\u7a0b\u6070\u597d\u5728\u67d0\u65f6\u56e0\u4e3a\u53d1\u2f63\u2f00\u4e2a\u2eda\u9519\u8bef\u6216\u8005\u56e0\u5176\u4ed6\u539f\u56e0\u2f7d\u6682\u505c\uff0c\u521a\u597d\u6709\u2f00\u4e2a\u201c\u989d\u5916\u201d\u7684\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0bCPU\u5468\u671f\u4e0d\u4f1a\u4e2d\u65ad\u2f2f CPU\u5229\u7528\u7387\u7684\u5012\u6570\u4e58\u4ee5\u6838\u5fc3\u6570","title":"\u8349\u7a3f"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_8","text":"\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u5e76\u53d1\u95ee\u9898 \u56e0\u4e3a\u9ad8\u7ea7\u8bed\u8a00\u7684\u4e00\u53e5\u5728\u6c47\u7f16\u91cc\u9762\u53ef\u80fd\u662f\u51e0\u53e5\u3002 \u7406\u89e3\u6c47\u7f16\u6307\u4ee4 \u673a\u5668\u7801 \u548c\u9ad8\u7ea7\u8bed\u8a00\u7684\u5173\u7cfb \u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u540c\u6b65\u6709\u90a3\u4e9b\u65b9\u5f0f \u53c2\u8003 \u4e34\u754c\u533a\u4e34\u754c\u533a\u7c7b\u4f3c\u4e8e\u4ee3\u7801\u5165\u53e3\u6709\u4e00\u4e2a\u68c0\u7968\u5458\u53ea\u8981\u4e00\u5f20\u7968\u62ff\u5230\u624d\u53ef\u4ee5\u8fdb\u53bb \u7531\u8fdb\u7a0b\u7ef4\u62a4 \u4e92\u65a5\u5bf9\u8c61\uff1a \u4fe1\u53f7\u91cf","title":"\u95ee\u9898"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_9","text":"\u7406\u89e3\u5e76\u53d1\u95ee\u9898\uff0c\u9700\u8981\u4ece\u9ad8\u9636\u7406\u89e3\u3002 \u7406\u89e3java\u7f16\u8bd1\u5668\u8bed\u8a00C\u8bed\u8a00\u7684\u591a\u7ebf\u7a0b\u673a\u5236\u3002 \u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u540c\u6b65\u673a\u5236","title":"\u603b\u7ed3"},{"location":"Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E8%8D%89%E7%A8%BF/","text":"\u4e2d\u65ad\u53ea\u662f\u7ed9\u4fe1\u53f7\u81f3\u4e8e\u4f60\u54cd\u5e94\u662f\u4f60\u81ea\u5df1\u7684\u4e8b\u60c5 \u6062\u590d\u6302\u8d77\u7684\u7ebf\u7a0b\u5230\u771f\u6b63\u9501\u7684\u83b7\u53d6\u8fd8\u662f\u6709\u65f6\u95f4\u5dee\u7684\uff0c\u4ece\u2f08\u7c7b\u7684\u2ec6\u5ea6\u6765\u770b\u8fd9\u4e2a\u65f6\u95f4\u5fae\u4e4e\u5176\u5fae\uff0c\u4f46\u662f\u4eceCPU\u7684\u2ec6\u5ea6\u6765\u770b\uff0c \u8fd9\u4e2a\u65f6\u95f4\u5dee\u5b58\u5728\u7684\u8fd8\u662f\u5f88\u660e\u663e\u7684\u3002\u6240 AQS \u72ec\u5360\u5f0f \u5171\u4eab\u5f0f","title":"\u8349\u7a3f"},{"location":"PC%E7%AB%AF/electron/","text":"\u65e5\u5fd7 electron hello world \u9879\u76ee\u5efa\u7acb\u6210\u529f \u5df2\u88c5\u5e93 \u4f4e\u4ee3\u7801\u5f15\u64ce | Low-Code Engine (lowcode-engine.cn) \u5f53\u524d\u5b66\u4e60 \u53c2\u8003\u6587\u6863 https://www.bilibili.com/video/BV1pY4y1i7Ac?spm_id_from=333.337.search-card.all.click&vd_source=6df4aa7b31f2694a11d8f97c71a807d8 youtube \u7eaf\u82f1\u6587\u5b57\u5e55","title":"Electron"},{"location":"PC%E7%AB%AF/electron/#_1","text":"electron hello world \u9879\u76ee\u5efa\u7acb\u6210\u529f \u5df2\u88c5\u5e93 \u4f4e\u4ee3\u7801\u5f15\u64ce | Low-Code Engine (lowcode-engine.cn)","title":"\u65e5\u5fd7"},{"location":"PC%E7%AB%AF/electron/#_2","text":"","title":"\u5f53\u524d\u5b66\u4e60"},{"location":"PC%E7%AB%AF/electron/#_3","text":"https://www.bilibili.com/video/BV1pY4y1i7Ac?spm_id_from=333.337.search-card.all.click&vd_source=6df4aa7b31f2694a11d8f97c71a807d8 youtube \u7eaf\u82f1\u6587\u5b57\u5e55","title":"\u53c2\u8003\u6587\u6863"},{"location":"docker/docker%20%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/","text":"\u53c2\u8003\u6587\u6863 \u89c6\u9891 docker \u83dc\u9e1f\u6559\u7a0b docker\u4ece\u5165\u95e8\u5230\u5b9e\u8df5 dockerhub \u5b98\u65b9\u82f1\u6587\u6587\u6863 docker\u89c6\u9891 \u547d\u4ee4\u5927\u5168 \u547d\u4ee4\u5206\u7c7b Docker\u73af\u5883\u4fe1\u606f info\u3001version \u955c\u50cf\u4ed3\u5e93\u547d\u4ee4 login\u3001logout\u3001pull\u3001push\u3001search \u955c\u50cf\u7ba1\u7406 build\u3001images\u3001import\u3001load\u3001rmi\u3001save\u3001tag\u3001commit \u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406 create\u3001exec\u3001kill\u3001pause\u3001restart\u3001rm\u3001run\u3001start\u3001stop\u3001unpause \u5bb9\u5668\u8fd0\u7ef4\u64cd\u4f5c attach\u3001export\u3001inspect\u3001port\u3001ps\u3001rename\u3001stats\u3001top\u3001wait\u3001cp\u3001diff\u3001update \u5bb9\u5668\u8d44\u6e90\u7ba1\u7406 volume\u3001network \u7cfb\u7edf\u4fe1\u606f\u65e5\u5fd7 events\u3001history\u3001logs 1.events\u6253\u5370\u5bb9\u5668\u7684\u5b9e\u65f6\u7cfb\u7edf\u4e8b\u4ef6 2.history \u6253\u5370\u51fa\u6307\u5b9a\u955c\u50cf\u7684\u5386\u53f2\u7248\u672c\u4fe1\u606f 3.logs\u6253\u5370\u5bb9\u5668\u4e2d\u8fdb\u7a0b\u7684\u8fd0\u884c\u65e5\u5fd7 \u5176\u4ed6\u547d\u4ee4 # \u542f\u52a8docker \u670d\u52a1 systemctl enable docker.service","title":"Docker \u547d\u4ee4\u5927\u5168"},{"location":"docker/docker%20%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/#_1","text":"\u89c6\u9891 docker \u83dc\u9e1f\u6559\u7a0b docker\u4ece\u5165\u95e8\u5230\u5b9e\u8df5 dockerhub \u5b98\u65b9\u82f1\u6587\u6587\u6863 docker\u89c6\u9891","title":"\u53c2\u8003\u6587\u6863"},{"location":"docker/docker%20%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/#_2","text":"","title":"\u547d\u4ee4\u5927\u5168"},{"location":"docker/docker%20%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/#_3","text":"Docker\u73af\u5883\u4fe1\u606f info\u3001version \u955c\u50cf\u4ed3\u5e93\u547d\u4ee4 login\u3001logout\u3001pull\u3001push\u3001search \u955c\u50cf\u7ba1\u7406 build\u3001images\u3001import\u3001load\u3001rmi\u3001save\u3001tag\u3001commit \u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406 create\u3001exec\u3001kill\u3001pause\u3001restart\u3001rm\u3001run\u3001start\u3001stop\u3001unpause \u5bb9\u5668\u8fd0\u7ef4\u64cd\u4f5c attach\u3001export\u3001inspect\u3001port\u3001ps\u3001rename\u3001stats\u3001top\u3001wait\u3001cp\u3001diff\u3001update \u5bb9\u5668\u8d44\u6e90\u7ba1\u7406 volume\u3001network \u7cfb\u7edf\u4fe1\u606f\u65e5\u5fd7 events\u3001history\u3001logs 1.events\u6253\u5370\u5bb9\u5668\u7684\u5b9e\u65f6\u7cfb\u7edf\u4e8b\u4ef6 2.history \u6253\u5370\u51fa\u6307\u5b9a\u955c\u50cf\u7684\u5386\u53f2\u7248\u672c\u4fe1\u606f 3.logs\u6253\u5370\u5bb9\u5668\u4e2d\u8fdb\u7a0b\u7684\u8fd0\u884c\u65e5\u5fd7","title":"\u547d\u4ee4\u5206\u7c7b"},{"location":"docker/docker%20%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/#_4","text":"# \u542f\u52a8docker \u670d\u52a1 systemctl enable docker.service","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/","text":"docker \u8fd0\u884cmysql https://blog.csdn.net/u012643122/article/details/125899829 docker run -d -p 3307:3306 --privileged=true -v \"F:\\other\\msyql\\log\":\"/var/log/mysql\" -v \"F:\\other\\msyql\\data\":\"/var/lib/mysql\" -v \"F:\\other\\msyql\\conf\":\"/etc/mysql/conf.d\" -e MYSQL_ROOT_PASSWORD=\"root\" --name mysql8 mysql:8.0.23 docker \u8fd0\u884credis docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name redis -v F:\\other\\redis\\redis.conf:/etc/redis/redis.conf -v F:\\other\\redis\\data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes --requirepass root docker \u542f\u52a8nacos docker run -p 8848:8848 --name koala-nacos -e MODE=standalone -d nacos/nacos-server:1.4.1 dockerfile #penjdk:8-jre \u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u6765\u6784\u5efa\u6b64\u955c\u50cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd0\u884c\u7684\u9700\u8981\u57fa\u7840\u73af\u5883 FROM openjdk:8-jre #WORKDIR\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u5bb9\u5668\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c \u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4\u4f1a\u5728\u8be5\u76ee\u5f55\u4e0b\u6267\u884c\u3002 WORKDIR /opt/docker/images/metabase/ #\u5c06\u5f53\u524dmetabase.jar \u590d\u5236\u5230\u5bb9\u5668\u6839\u76ee\u5f55\u4e0b ADD helloworld-0.0.1-SNAPSHOT.jar helloworld-0.0.1-SNAPSHOT.jar #\u5c06\u4f9d\u8d56\u5305 \u590d\u5236\u5230\u5bb9\u5668\u6839\u76ee\u5f55/libs\u4e0b,metabase.jar\u5df2\u4e0d\u518d\u9700\u8981\u6dfb\u52a0\u5176\u5b83jar\u5305 #ADD libs /libs #\u66b4\u9732\u5bb9\u5668\u7aef\u53e3\u4e3a3000 Docker\u955c\u50cf\u544a\u77e5Docker\u5bbf\u4e3b\u673a\u5e94\u7528\u76d1\u542c\u4e863000\u7aef\u53e3 EXPOSE 3000 #\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4 CMD java -jar helloworld-0.0.1-SNAPSHOT.jar \u6253\u5305\u955c\u50cf docker build -f DockerFile -t test/metabase:1.0.0 .","title":"Docker \u6848\u4f8b"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/#docker-mysql","text":"https://blog.csdn.net/u012643122/article/details/125899829 docker run -d -p 3307:3306 --privileged=true -v \"F:\\other\\msyql\\log\":\"/var/log/mysql\" -v \"F:\\other\\msyql\\data\":\"/var/lib/mysql\" -v \"F:\\other\\msyql\\conf\":\"/etc/mysql/conf.d\" -e MYSQL_ROOT_PASSWORD=\"root\" --name mysql8 mysql:8.0.23","title":"docker \u8fd0\u884cmysql"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/#docker-redis","text":"docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name redis -v F:\\other\\redis\\redis.conf:/etc/redis/redis.conf -v F:\\other\\redis\\data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes --requirepass root","title":"docker \u8fd0\u884credis"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/#docker-nacos","text":"docker run -p 8848:8848 --name koala-nacos -e MODE=standalone -d nacos/nacos-server:1.4.1","title":"docker \u542f\u52a8nacos"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/#dockerfile","text":"#penjdk:8-jre \u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u6765\u6784\u5efa\u6b64\u955c\u50cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd0\u884c\u7684\u9700\u8981\u57fa\u7840\u73af\u5883 FROM openjdk:8-jre #WORKDIR\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u5bb9\u5668\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c \u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4\u4f1a\u5728\u8be5\u76ee\u5f55\u4e0b\u6267\u884c\u3002 WORKDIR /opt/docker/images/metabase/ #\u5c06\u5f53\u524dmetabase.jar \u590d\u5236\u5230\u5bb9\u5668\u6839\u76ee\u5f55\u4e0b ADD helloworld-0.0.1-SNAPSHOT.jar helloworld-0.0.1-SNAPSHOT.jar #\u5c06\u4f9d\u8d56\u5305 \u590d\u5236\u5230\u5bb9\u5668\u6839\u76ee\u5f55/libs\u4e0b,metabase.jar\u5df2\u4e0d\u518d\u9700\u8981\u6dfb\u52a0\u5176\u5b83jar\u5305 #ADD libs /libs #\u66b4\u9732\u5bb9\u5668\u7aef\u53e3\u4e3a3000 Docker\u955c\u50cf\u544a\u77e5Docker\u5bbf\u4e3b\u673a\u5e94\u7528\u76d1\u542c\u4e863000\u7aef\u53e3 EXPOSE 3000 #\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4 CMD java -jar helloworld-0.0.1-SNAPSHOT.jar","title":"dockerfile"},{"location":"docker/docker%20%E6%A1%88%E4%BE%8B/#_1","text":"docker build -f DockerFile -t test/metabase:1.0.0 .","title":"\u6253\u5305\u955c\u50cf"},{"location":"docker/k8s%E5%91%BD%E4%BB%A4/","text":"\u67e5\u770b\u5bb9\u5668\u6620\u5c04\u7aef\u53e3 kubectl get svc","title":"K8s\u547d\u4ee4"},{"location":"docker/%E9%97%AE%E9%A2%98/","text":"docker \u6709POD \u7684\u6982\u5ff5\uff1f https://www.jianshu.com/p/9abc4af0f680 \u597d\u50cfpod \u662fk8s \u7684\u6982\u5ff5 \u8868\u793a\u5bb9\u5668\u96c6\u7fa4 dockefile \u6307\u4ee4\u7406\u89e3 ENTRYPOINT CMD docker \u7f51\u7edc\u662f\u600e\u4e48\u56de\u4e8b \u5173\u4e8eMac\u5bbf\u4e3b\u673a\u65e0\u6cd5ping\u901aDocker\u5bb9\u5668\u7684\u95ee\u9898 https://www.cnblogs.com/luo-c/p/15830769.html https://www.haoyizebo.com/posts/fd0b9bd8/","title":"\u95ee\u9898"},{"location":"docker/%E9%97%AE%E9%A2%98/#docker-pod","text":"https://www.jianshu.com/p/9abc4af0f680 \u597d\u50cfpod \u662fk8s \u7684\u6982\u5ff5 \u8868\u793a\u5bb9\u5668\u96c6\u7fa4","title":"docker \u6709POD \u7684\u6982\u5ff5\uff1f"},{"location":"docker/%E9%97%AE%E9%A2%98/#dockefile","text":"ENTRYPOINT CMD","title":"dockefile \u6307\u4ee4\u7406\u89e3"},{"location":"docker/%E9%97%AE%E9%A2%98/#docker","text":"","title":"docker \u7f51\u7edc\u662f\u600e\u4e48\u56de\u4e8b"},{"location":"docker/%E9%97%AE%E9%A2%98/#macpingdocker","text":"https://www.cnblogs.com/luo-c/p/15830769.html https://www.haoyizebo.com/posts/fd0b9bd8/","title":"\u5173\u4e8eMac\u5bbf\u4e3b\u673a\u65e0\u6cd5ping\u901aDocker\u5bb9\u5668\u7684\u95ee\u9898"},{"location":"liunx/jenkins/","text":"\u534a\u5c0f\u65f6\u5f04\u61c2jenkins","title":"Jenkins"},{"location":"liunx/yum%20%E5%91%BD%E4%BB%A4/","text":"\u4ecb\u7ecdliunx \u5b89\u88c5\u8f6f\u4ef6\u7684\u547d\u4ee4 yum \u641c\u7d22\u5b89\u88c5\u8f6f\u4ef6 yum -y list java* yum -y install java-1.8.0- openjdk","title":"Yum \u547d\u4ee4"},{"location":"liunx/yum%20%E5%91%BD%E4%BB%A4/#yum","text":"yum -y list java* yum -y install java-1.8.0- openjdk","title":"yum \u641c\u7d22\u5b89\u88c5\u8f6f\u4ef6"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u5199\u4e00\u4e9b\u6587\u6863 \u53c2\u8003\u6587\u6863 \u6587\u4ef6\u64cd\u4f5c \u53c2\u8003\u6587\u4ef6 # \u5220\u9664\u6587\u4ef6 rm -rf filename # \u89e3\u538b tar -zxvf \u7f51\u7edc\u7ba1\u7406 window \u7f51\u7edc\u5e38\u7528\u547d\u4ee4 # \u67e5\u770b\u7535\u8111Ip ip addr \u8fdb\u7a0b\u7ba1\u7406 \u53c2\u8003\u6587\u4ef6 netstat -tlnp| grep 2379 # 9\u7c7b\u4f3c\u4e8e\u7ed9\u8fdb\u7a0b\u6cd5\u4fe1\u53f7 \u8be6\u60c5\u53c2\u8003https://blog.csdn.net/guo_guo_cai/article/details/78499477/ kill 9 pid \u7cfb\u7edf\u6743\u9650\u547d\u4ee4 sudo passws root # \u8bbe\u7f6e\u5bc6\u7801 \u9632\u706b\u5899 Ubuntu\u5f00\u653e\u6307\u5b9a\u7aef\u53e3 #\u9632\u706b\u5899 \u9632\u706b\u5899\u5c5e\u4e8eliunx \u4e0a\u7684\u8f6f\u4ef6 \u4e0d\u5c5e\u4e8eliunx \u547d\u4ee4 iptables-save #\u67e5\u770b\u9632\u706b\u5899\u5f00\u653e\u7aef\u53e3 firewall-cmd --zone=public --add-port=80/tcp --permanent #\u6dfb\u52a080\u7aef\u53e3 firewall-cmd --reload #\u91cd\u8f7d\u9632\u706b\u5899 systemctl stop firewalld.service # \u505c\u6b62 systemctl disable firewalld.service # \u7981\u7528\u9632\u706b\u5899\uff0c\u4e0b\u6b21\u542f\u52a8\u4e5f\u4e0d\u4f1a\u5f00\u542f","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"","title":"\u53c2\u8003\u6587\u6863"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"\u53c2\u8003\u6587\u4ef6 # \u5220\u9664\u6587\u4ef6 rm -rf filename # \u89e3\u538b tar -zxvf","title":"\u6587\u4ef6\u64cd\u4f5c"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"window \u7f51\u7edc\u5e38\u7528\u547d\u4ee4 # \u67e5\u770b\u7535\u8111Ip ip addr","title":"\u7f51\u7edc\u7ba1\u7406"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","text":"\u53c2\u8003\u6587\u4ef6 netstat -tlnp| grep 2379 # 9\u7c7b\u4f3c\u4e8e\u7ed9\u8fdb\u7a0b\u6cd5\u4fe1\u53f7 \u8be6\u60c5\u53c2\u8003https://blog.csdn.net/guo_guo_cai/article/details/78499477/ kill 9 pid","title":"\u8fdb\u7a0b\u7ba1\u7406"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","text":"sudo passws root # \u8bbe\u7f6e\u5bc6\u7801","title":"\u7cfb\u7edf\u6743\u9650\u547d\u4ee4"},{"location":"liunx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","text":"Ubuntu\u5f00\u653e\u6307\u5b9a\u7aef\u53e3 #\u9632\u706b\u5899 \u9632\u706b\u5899\u5c5e\u4e8eliunx \u4e0a\u7684\u8f6f\u4ef6 \u4e0d\u5c5e\u4e8eliunx \u547d\u4ee4 iptables-save #\u67e5\u770b\u9632\u706b\u5899\u5f00\u653e\u7aef\u53e3 firewall-cmd --zone=public --add-port=80/tcp --permanent #\u6dfb\u52a080\u7aef\u53e3 firewall-cmd --reload #\u91cd\u8f7d\u9632\u706b\u5899 systemctl stop firewalld.service # \u505c\u6b62 systemctl disable firewalld.service # \u7981\u7528\u9632\u706b\u5899\uff0c\u4e0b\u6b21\u542f\u52a8\u4e5f\u4e0d\u4f1a\u5f00\u542f","title":"\u9632\u706b\u5899"},{"location":"python/QT5/","text":"","title":"QT5"},{"location":"python/numpy/","text":"\u53c2\u8003\u6587\u6863 https://www.bookstack.cn/read/ts-numpy-tut-zh/8.md","title":"Numpy"},{"location":"python/numpy/#_1","text":"https://www.bookstack.cn/read/ts-numpy-tut-zh/8.md","title":"\u53c2\u8003\u6587\u6863"},{"location":"python/turtle/","text":"\u5b98\u65b9\u6587\u6863 \u4e2d\u6587\u6587\u6863 \u57fa\u7840\u77e5\u8bc6 \u6d77\u5f52\u753b\u56fe\u5174\u8da3\u7f51\u7ad9","title":"Turtle"},{"location":"python/%E6%95%A3%E4%B9%B1%E7%9F%A5%E8%AF%86/","text":"\u5305\u7684\u5f15\u5165\u548c\u5bfc\u51fa \u5305\u7684\u6279\u91cf\u5bfc\u5165\u548c\u5bfc\u51fa \u5f53\u6211\u4eec\u7528Python\u5199\u4e86\u9879\u76ee\u65f6\uff0c\u9700\u8981\u7ed9\u522b\u7684\u5c0f\u4f19\u4f34\u4f7f\u7528\u3002\u9879\u76ee\u4e2d\u6709\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u6bcf\u4e2a\u4f7f\u7528\u9879\u76ee\u7684\u5c0f\u4f19\u4f34\u90fd\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u6587\u4ef6\u6253\u5f00\u67e5\u770b\u4f9d\u8d56\u5305\u5e76\u4e00\u4e2a\u4e00\u4e2a\u5b89\u88c5\uff0c\u5c31\u9700\u8981\u8017\u8d39\u5f88\u591a\u65f6\u95f4\u7cbe\u529b\u6210\u672c\u4e86\u3002\u8fd9\u65f6\u5019pipreqs\u5de5\u5177\u5305\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 pipreqs\u5305\u672c\u8eab\u662f\u4e00\u4e2apython\u5305\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u5b83\uff1apip install pipreqs. \u5bfc\u51fa\u9879\u76ee\u6240\u9700\u8981\u7684\u5305\u5e76\u5199\u5165\u6587\u4ef6\u4e2d\uff1a pipreqs ./ --encoding=utf-8\uff08\u8be5\u547d\u4ee4\u4f1a\u81ea\u52a8\u5728./\u76ee\u5f55\uff0c\u5373\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210requirements.txt\u6587\u4ef6\uff09 \u751f\u6210\u6587\u4ef6\u540e\uff0c\u5c0f\u4f19\u4f34\u4eec\u5b89\u88c5\u6587\u4ef6\u4e2d\u7684\u4f9d\u8d56\u5305\u5c31\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u8fdb\u884c\uff1a pip install -r requirements.txt \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7pip list\u67e5\u770b\u5b89\u88c5\u597d\u7684\u5305","title":"\u6563\u4e71\u77e5\u8bc6"},{"location":"python/%E6%95%A3%E4%B9%B1%E7%9F%A5%E8%AF%86/#_1","text":"","title":"\u5305\u7684\u5f15\u5165\u548c\u5bfc\u51fa"},{"location":"python/%E6%95%A3%E4%B9%B1%E7%9F%A5%E8%AF%86/#_2","text":"\u5f53\u6211\u4eec\u7528Python\u5199\u4e86\u9879\u76ee\u65f6\uff0c\u9700\u8981\u7ed9\u522b\u7684\u5c0f\u4f19\u4f34\u4f7f\u7528\u3002\u9879\u76ee\u4e2d\u6709\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u6bcf\u4e2a\u4f7f\u7528\u9879\u76ee\u7684\u5c0f\u4f19\u4f34\u90fd\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u6587\u4ef6\u6253\u5f00\u67e5\u770b\u4f9d\u8d56\u5305\u5e76\u4e00\u4e2a\u4e00\u4e2a\u5b89\u88c5\uff0c\u5c31\u9700\u8981\u8017\u8d39\u5f88\u591a\u65f6\u95f4\u7cbe\u529b\u6210\u672c\u4e86\u3002\u8fd9\u65f6\u5019pipreqs\u5de5\u5177\u5305\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 pipreqs\u5305\u672c\u8eab\u662f\u4e00\u4e2apython\u5305\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u5b83\uff1apip install pipreqs. \u5bfc\u51fa\u9879\u76ee\u6240\u9700\u8981\u7684\u5305\u5e76\u5199\u5165\u6587\u4ef6\u4e2d\uff1a pipreqs ./ --encoding=utf-8\uff08\u8be5\u547d\u4ee4\u4f1a\u81ea\u52a8\u5728./\u76ee\u5f55\uff0c\u5373\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210requirements.txt\u6587\u4ef6\uff09 \u751f\u6210\u6587\u4ef6\u540e\uff0c\u5c0f\u4f19\u4f34\u4eec\u5b89\u88c5\u6587\u4ef6\u4e2d\u7684\u4f9d\u8d56\u5305\u5c31\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u8fdb\u884c\uff1a pip install -r requirements.txt \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7pip list\u67e5\u770b\u5b89\u88c5\u597d\u7684\u5305","title":"\u5305\u7684\u6279\u91cf\u5bfc\u5165\u548c\u5bfc\u51fa"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/","text":"\u53c2\u8003\u6587\u6863 1..0 \u53c2\u8003\u9879\u76ee https://github.com/secreter/websocket_chat 1.1. \u540e\u7aef Netty-socketio \u5b98\u65b9\u4ed3\u5e93\uff1ahttps://github.com/mrniko/netty-socketio SpringBoot\u7cfb\u5217 - \u96c6\u6210SocketIO\u5b9e\u65f6\u901a\u4fe1\uff1ahttps://www.xncoding.com/2017/07/16/spring/sb-socketio.html Spring Boot\u5b9e\u6218\u4e4bnetty-socketio\u5b9e\u73b0\u7b80\u5355\u804a\u5929\u5ba4\uff1ahttp://blog.csdn.net/sun_t89/article/details/52060946 1..2. \u524d\u7aef socket.io \u5b98\u7f51\uff1ahttps://socket.io/ axios.js \u7528\u6cd5\uff1ahttps://github.com/axios/axios#example 2. \u573a\u666f\u95ee\u9898 2.1 \u7406\u89e3socketIO\u57fa\u672c\u6982\u5ff5","title":"Socket \u8349\u7a3f"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#_1","text":"","title":"\u53c2\u8003\u6587\u6863"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#10","text":"https://github.com/secreter/websocket_chat","title":"1..0 \u53c2\u8003\u9879\u76ee"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#11","text":"Netty-socketio \u5b98\u65b9\u4ed3\u5e93\uff1ahttps://github.com/mrniko/netty-socketio SpringBoot\u7cfb\u5217 - \u96c6\u6210SocketIO\u5b9e\u65f6\u901a\u4fe1\uff1ahttps://www.xncoding.com/2017/07/16/spring/sb-socketio.html Spring Boot\u5b9e\u6218\u4e4bnetty-socketio\u5b9e\u73b0\u7b80\u5355\u804a\u5929\u5ba4\uff1ahttp://blog.csdn.net/sun_t89/article/details/52060946","title":"1.1. \u540e\u7aef"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#12","text":"socket.io \u5b98\u7f51\uff1ahttps://socket.io/ axios.js \u7528\u6cd5\uff1ahttps://github.com/axios/axios#example","title":"1..2. \u524d\u7aef"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#2","text":"","title":"2. \u573a\u666f\u95ee\u9898"},{"location":"socket/socket%20%E8%8D%89%E7%A8%BF/#21-socketio","text":"","title":"2.1 \u7406\u89e3socketIO\u57fa\u672c\u6982\u5ff5"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/","text":"Oauth2 \u56db\u79cd\u6388\u6743\u6a21\u5f0f \u53c2\u8003\u6587\u6863\uff1ahttps://github.com/lansinuote/Spring-Oauth2-Toturials \u6388\u6743\u7801\u6a21\u5f0f \u8bf7\u6c42\u5f97\u5230\u6388\u6743\u7801 ttp://127.0.0.1:3001/oauth/authorize?client_id=client1&response_type=token&scope=all&redirect_uri=http://www.baidu.com \u901a\u8fc7\u5f97\u5230\u7684\u6388\u6743\u7801\u53bb\u83b7\u53d6token http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=authorization_code&redirect_uri=http://www.baidu.com&code=YFHlnS { \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"authorization_code\", \"code\", \"euCRiL\",//\u8fd9\u4e2acode\u662f\u4ecegetCode()\u65b9\u6cd5\u83b7\u53d6\u7684 \"redirect_uri\", \"http://www.baidu.com\" }; \u7528\u6237\u5bc6\u7801\u6a21\u5f0f http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=password&username=admin&password=admin String[] params = new String[]{ \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"password\", \"username\", \"admin\", \"password\", \"admin\" }; \u7b80\u5355\u6a21\u5f0f http://127.0.0.1:3001/oauth/authorize?client_id=client1&response_type=token&scope=all&redirect_uri=http://www.baidu.com \u5ba2\u6237\u7aef\u6a21\u5f0f http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=client_credentials String[] params = new String[]{ \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"client_credentials\" };","title":"Oauth2 \u56db\u79cd\u6388\u6743\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/#oauth2","text":"\u53c2\u8003\u6587\u6863\uff1ahttps://github.com/lansinuote/Spring-Oauth2-Toturials","title":"Oauth2 \u56db\u79cd\u6388\u6743\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/#_1","text":"\u8bf7\u6c42\u5f97\u5230\u6388\u6743\u7801 ttp://127.0.0.1:3001/oauth/authorize?client_id=client1&response_type=token&scope=all&redirect_uri=http://www.baidu.com \u901a\u8fc7\u5f97\u5230\u7684\u6388\u6743\u7801\u53bb\u83b7\u53d6token http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=authorization_code&redirect_uri=http://www.baidu.com&code=YFHlnS { \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"authorization_code\", \"code\", \"euCRiL\",//\u8fd9\u4e2acode\u662f\u4ecegetCode()\u65b9\u6cd5\u83b7\u53d6\u7684 \"redirect_uri\", \"http://www.baidu.com\" };","title":"\u6388\u6743\u7801\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/#_2","text":"http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=password&username=admin&password=admin String[] params = new String[]{ \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"password\", \"username\", \"admin\", \"password\", \"admin\" };","title":"\u7528\u6237\u5bc6\u7801\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/#_3","text":"http://127.0.0.1:3001/oauth/authorize?client_id=client1&response_type=token&scope=all&redirect_uri=http://www.baidu.com","title":"\u7b80\u5355\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Oauth2%20%E5%9B%9B%E7%A7%8D%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F/#_4","text":"http://127.0.0.1:3001/oauth/token?client_id=admin&client_secret=123&grant_type=client_credentials String[] params = new String[]{ \"client_id\", \"client1\", \"client_secret\", \"123123\", \"grant_type\", \"client_credentials\" };","title":"\u5ba2\u6237\u7aef\u6a21\u5f0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/Q%26A/","text":"5.7.1 security \u66f4\u65b0\u4e86 spring security \u8fc1\u79fb\u6307\u5bfc TokenStore \u5b58\u4e86\u4ec0\u4e48\u4e1c\u897f\uff1f https://blog.csdn.net/liuyanglglg/article/details/89077855","title":"Q&A"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/token%20%E7%B3%BB%E5%88%97%E7%9F%A5%E8%AF%86/","text":"token \u5206\u4e3a\u666e\u901atoken \u548cjwt token Jwt \u672c\u8eab\u5c31\u53ef\u4ee5\u89e3\u6790\u51fa\u7528\u6237\u6570\u636e\u4e0d\u9700\u8981\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d \u666e\u901a\u5b58\u50a8\u5728\u6570\u636e\u5e93\u8fdb\u884c\u5171\u4eab","title":"Token \u7cfb\u5217\u77e5\u8bc6"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/","text":"\u53c2\u8003 RFC\u6587\u6863 github \u53c2\u8003\u4ee3\u7801 spring security \u6559\u7a0b\u4e66\u6808\u7f51 \u5b98\u65b9github\u8fc1\u79fb\u6587\u6863 \u5927\u536bspring-security spring security\u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248 \u7b80\u7565\u7248 \u4e66\u6808 \u5b98\u65b9\u6587\u6863\u82f1\u6587\u7248 JWT Token\u5b98\u65b9\u6587\u6863 JWT\u9879\u76ee\u5b66\u4e60 \u4e86\u89e3oauth2 \u7684\u57fa\u672c\u6982\u5ff5 \u2714 \u7406\u89e3oauth2 \u56db\u79cd\u6a21\u5f0f \u2714 \u4e2a\u4eba\u9879\u76ee\u5730\u5740","title":"\u53c2\u8003\u6587\u6863"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/#_1","text":"RFC\u6587\u6863 github \u53c2\u8003\u4ee3\u7801 spring security \u6559\u7a0b\u4e66\u6808\u7f51 \u5b98\u65b9github\u8fc1\u79fb\u6587\u6863 \u5927\u536bspring-security spring security\u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248 \u7b80\u7565\u7248 \u4e66\u6808 \u5b98\u65b9\u6587\u6863\u82f1\u6587\u7248 JWT Token\u5b98\u65b9\u6587\u6863 JWT\u9879\u76ee\u5b66\u4e60 \u4e86\u89e3oauth2 \u7684\u57fa\u672c\u6982\u5ff5 \u2714 \u7406\u89e3oauth2 \u56db\u79cd\u6a21\u5f0f \u2714 \u4e2a\u4eba\u9879\u76ee\u5730\u5740","title":"\u53c2\u8003"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E6%8E%88%E6%9D%83%E6%9C%8D%E5%8A%A1%E5%99%A8/","text":"\u6388\u6743\u670d\u52a1\u5668\u914d\u7f6e package com.koala.config; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.crypto.password.PasswordEncoder; import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer; import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter; import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer; import org.springframework.security.oauth2.provider.code.InMemoryAuthorizationCodeServices; import org.springframework.security.oauth2.provider.token.DefaultTokenServices; import org.springframework.security.oauth2.provider.token.TokenStore; /** * @author koala * @date 2022/11/12 22:50 */@Configuration @EnableAuthorizationServer public class AuthConfig extends AuthorizationServerConfigurerAdapter { @Autowired private PasswordEncoder passwordEncoder; @Autowired private AuthenticationManager authenticationManager; /** * redis\u5de5\u5382\uff0c\u9ed8\u8ba4\u4f7f\u7528lettue */ @Autowired private TokenStore tokenStore; public AuthConfig() { super(); } /** * \u628atoken \u76f8\u5173\u7684\u63a5\u53e3\u66b4\u9732\u51fa\u53bb * * @param security * @throws Exception */ @Override public void configure(AuthorizationServerSecurityConfigurer security) throws Exception { security.tokenKeyAccess(\"permitAll()\") .checkTokenAccess(\"permitAll()\") .allowFormAuthenticationForClients(); } /** * \u914d\u7f6e\u5ba2\u6237\u7aef * * @param clients * @throws Exception */ @Override public void configure(ClientDetailsServiceConfigurer clients) throws Exception { clients.inMemory() .withClient(\"admin\") .secret(passwordEncoder.encode(\"123\")) .scopes(\"admin\") .authorizedGrantTypes(\"authorization_code\", \"password\", \"client_credentials\", \"implicit\", \"refresh_token\") .resourceIds(\"admin\") .accessTokenValiditySeconds(10000000) .autoApprove(true) .redirectUris(\"http://www.baidu.com\"); } @Bean public DefaultTokenServices tokenService() { DefaultTokenServices tokenServices = new DefaultTokenServices(); //\u914d\u7f6etoken\u5b58\u50a8 tokenServices.setTokenStore(tokenStore); //\u5f00\u542f\u652f\u6301refresh_token\uff0c\u6b64\u5904\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u914d\u7f6e\uff0c\u542f\u52a8\u670d\u52a1\u540e\u518d\u914d\u7f6e\u91cd\u542f\u670d\u52a1\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u8fd4\u56detoken\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u5f0f\uff1a\u6e05\u9664redis\u5bf9\u5e94token\u5b58\u50a8 tokenServices.setSupportRefreshToken(true); //\u590d\u7528refresh_token tokenServices.setReuseRefreshToken(true); //token\u6709\u6548\u671f\uff0c\u8bbe\u7f6e12\u5c0f\u65f6 tokenServices.setAccessTokenValiditySeconds(12 * 60 * 60); //refresh_token\u6709\u6548\u671f\uff0c\u8bbe\u7f6e\u4e00\u5468 tokenServices.setRefreshTokenValiditySeconds(7 * 24 * 60 * 60); return tokenServices; } /** * \u914d\u7f6e\u6388\u6743\u7ba1\u7406\u5668 \u548c token\u7684\u5b58\u50a8\u4f4d\u7f6e * * @param endpoints * @throws Exception */ @Override public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception { endpoints.authenticationManager(authenticationManager) .tokenServices(tokenService()) .authorizationCodeServices(new InMemoryAuthorizationCodeServices()) .tokenStore(tokenStore); } } security \u914d\u7f6e package com.koala.config; import com.koala.model.SysUserDetails; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.config.annotation.web.builders.HttpSecurity; import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter; import org.springframework.security.core.userdetails.UserDetails; import org.springframework.security.core.userdetails.UserDetailsService; import org.springframework.security.core.userdetails.UsernameNotFoundException; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder; import org.springframework.security.crypto.password.PasswordEncoder; /** * \u6388\u6743\u670d\u52a1\u5668\u914d\u7f6e * * @author koala * @date 2022/11/12 12:38 */@Configuration @EnableWebSecurity public class SecurityConfig extends WebSecurityConfigurerAdapter { @Bean public PasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder(); } @Bean @Override protected AuthenticationManager authenticationManager() throws Exception { return super.authenticationManager(); } @Override protected void configure(HttpSecurity http) throws Exception { http.csrf().disable() .authorizeRequests() .anyRequest().permitAll() .and() .formLogin() .and() .logout(); } @Bean public UserDetailsService userDetailsService() { UserDetailsService userDetailsService = new UserDetailsService() { @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { if (username.equals(\"user\")) { SysUserDetails user = new SysUserDetails(); user.setUsername(\"user\"); user.setPassword(passwordEncoder().encode(\"user\")); user.setPerms(\"user\"); return user; } if (username.equals(\"admin\")) { SysUserDetails admin = new SysUserDetails(); admin.setUsername(\"admin\"); admin.setPassword(passwordEncoder().encode(\"admin\")); admin.setPerms(\"admin\"); return admin; } return null; } }; return userDetailsService; } }","title":"\u6388\u6743\u670d\u52a1\u5668\u914d\u7f6e"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E6%8E%88%E6%9D%83%E6%9C%8D%E5%8A%A1%E5%99%A8/#_1","text":"package com.koala.config; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.crypto.password.PasswordEncoder; import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer; import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter; import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer; import org.springframework.security.oauth2.provider.code.InMemoryAuthorizationCodeServices; import org.springframework.security.oauth2.provider.token.DefaultTokenServices; import org.springframework.security.oauth2.provider.token.TokenStore; /** * @author koala * @date 2022/11/12 22:50 */@Configuration @EnableAuthorizationServer public class AuthConfig extends AuthorizationServerConfigurerAdapter { @Autowired private PasswordEncoder passwordEncoder; @Autowired private AuthenticationManager authenticationManager; /** * redis\u5de5\u5382\uff0c\u9ed8\u8ba4\u4f7f\u7528lettue */ @Autowired private TokenStore tokenStore; public AuthConfig() { super(); } /** * \u628atoken \u76f8\u5173\u7684\u63a5\u53e3\u66b4\u9732\u51fa\u53bb * * @param security * @throws Exception */ @Override public void configure(AuthorizationServerSecurityConfigurer security) throws Exception { security.tokenKeyAccess(\"permitAll()\") .checkTokenAccess(\"permitAll()\") .allowFormAuthenticationForClients(); } /** * \u914d\u7f6e\u5ba2\u6237\u7aef * * @param clients * @throws Exception */ @Override public void configure(ClientDetailsServiceConfigurer clients) throws Exception { clients.inMemory() .withClient(\"admin\") .secret(passwordEncoder.encode(\"123\")) .scopes(\"admin\") .authorizedGrantTypes(\"authorization_code\", \"password\", \"client_credentials\", \"implicit\", \"refresh_token\") .resourceIds(\"admin\") .accessTokenValiditySeconds(10000000) .autoApprove(true) .redirectUris(\"http://www.baidu.com\"); } @Bean public DefaultTokenServices tokenService() { DefaultTokenServices tokenServices = new DefaultTokenServices(); //\u914d\u7f6etoken\u5b58\u50a8 tokenServices.setTokenStore(tokenStore); //\u5f00\u542f\u652f\u6301refresh_token\uff0c\u6b64\u5904\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u914d\u7f6e\uff0c\u542f\u52a8\u670d\u52a1\u540e\u518d\u914d\u7f6e\u91cd\u542f\u670d\u52a1\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u8fd4\u56detoken\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u5f0f\uff1a\u6e05\u9664redis\u5bf9\u5e94token\u5b58\u50a8 tokenServices.setSupportRefreshToken(true); //\u590d\u7528refresh_token tokenServices.setReuseRefreshToken(true); //token\u6709\u6548\u671f\uff0c\u8bbe\u7f6e12\u5c0f\u65f6 tokenServices.setAccessTokenValiditySeconds(12 * 60 * 60); //refresh_token\u6709\u6548\u671f\uff0c\u8bbe\u7f6e\u4e00\u5468 tokenServices.setRefreshTokenValiditySeconds(7 * 24 * 60 * 60); return tokenServices; } /** * \u914d\u7f6e\u6388\u6743\u7ba1\u7406\u5668 \u548c token\u7684\u5b58\u50a8\u4f4d\u7f6e * * @param endpoints * @throws Exception */ @Override public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception { endpoints.authenticationManager(authenticationManager) .tokenServices(tokenService()) .authorizationCodeServices(new InMemoryAuthorizationCodeServices()) .tokenStore(tokenStore); } }","title":"\u6388\u6743\u670d\u52a1\u5668\u914d\u7f6e"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E6%8E%88%E6%9D%83%E6%9C%8D%E5%8A%A1%E5%99%A8/#security","text":"package com.koala.config; import com.koala.model.SysUserDetails; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.config.annotation.web.builders.HttpSecurity; import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter; import org.springframework.security.core.userdetails.UserDetails; import org.springframework.security.core.userdetails.UserDetailsService; import org.springframework.security.core.userdetails.UsernameNotFoundException; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder; import org.springframework.security.crypto.password.PasswordEncoder; /** * \u6388\u6743\u670d\u52a1\u5668\u914d\u7f6e * * @author koala * @date 2022/11/12 12:38 */@Configuration @EnableWebSecurity public class SecurityConfig extends WebSecurityConfigurerAdapter { @Bean public PasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder(); } @Bean @Override protected AuthenticationManager authenticationManager() throws Exception { return super.authenticationManager(); } @Override protected void configure(HttpSecurity http) throws Exception { http.csrf().disable() .authorizeRequests() .anyRequest().permitAll() .and() .formLogin() .and() .logout(); } @Bean public UserDetailsService userDetailsService() { UserDetailsService userDetailsService = new UserDetailsService() { @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { if (username.equals(\"user\")) { SysUserDetails user = new SysUserDetails(); user.setUsername(\"user\"); user.setPassword(passwordEncoder().encode(\"user\")); user.setPerms(\"user\"); return user; } if (username.equals(\"admin\")) { SysUserDetails admin = new SysUserDetails(); admin.setUsername(\"admin\"); admin.setPassword(passwordEncoder().encode(\"admin\")); admin.setPerms(\"admin\"); return admin; } return null; } }; return userDetailsService; } }","title":"security \u914d\u7f6e"},{"location":"srping%20%E7%B3%BB%E5%88%97/security/%E8%AF%A6%E8%A7%A3/TokenStore/","text":"\u53c2\u8003\u6587\u6863\uff1ahttps://juejin.cn/post/6844903542960947207","title":"TokenStore"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/mybatis-plus/","text":"sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868 \u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868 group by \u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"Mybatis plus"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/mybatis-plus/#sql","text":"\u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868","title":"sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/mybatis-plus/#group-by","text":"\u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"group by"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/sql%E8%AF%AD%E5%8F%A5/","text":"sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868 \u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868 group by \u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"Sql\u8bed\u53e5"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/sql%E8%AF%AD%E5%8F%A5/#sql","text":"\u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868","title":"sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/sql%E8%AF%AD%E5%8F%A5/#group-by","text":"\u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"group by"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E4%BC%A0%E5%8F%82%E6%95%B0/","text":"\u65e5\u671f\u53c2\u6570 \u63a8\u8350Post \u65b9\u6cd5 @JsonFormat(pattern=\"yyyy-MM-dd HH:mm:ss\",timezone = \"GMT+8\",shape = JsonFormat.Shape.STRING) \u96c6\u5408\u53c2\u6570 \u63a8\u8350Post \u65b9\u6cd5 \u63a8\u8350Post \u65b9\u6cd5","title":"\u4f20\u53c2\u6570"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E4%BC%A0%E5%8F%82%E6%95%B0/#_1","text":"\u63a8\u8350Post \u65b9\u6cd5 @JsonFormat(pattern=\"yyyy-MM-dd HH:mm:ss\",timezone = \"GMT+8\",shape = JsonFormat.Shape.STRING)","title":"\u65e5\u671f\u53c2\u6570"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E4%BC%A0%E5%8F%82%E6%95%B0/#_2","text":"\u63a8\u8350Post \u65b9\u6cd5 \u63a8\u8350Post \u65b9\u6cd5","title":"\u96c6\u5408\u53c2\u6570"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/","text":"@Pointcut (7\u6761\u6d88\u606f) spring\u5207\u9762\u7f16\u7a0b\u6a21\u677f_\u73b2\u73d1\u00b7\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 011-Spring aop 002-\u6838\u5fc3\u8bf4\u660e-\u5207\u70b9PointCut\u3001\u901a\u77e5Advice\u3001\u5207\u9762Advisor - bjlhx15 - \u535a\u5ba2\u56ed (cnblogs.com) \u7c7b\u578b\u539f\u751f\u5207\u70b9\u51fd\u6570within","title":"\u5207\u9762\u7f16\u7a0b"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/#within","text":"","title":"\u7c7b\u578b\u539f\u751f\u5207\u70b9\u51fd\u6570within"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%8F%82%E6%95%B0%E6%95%88%E9%AA%8C/","text":"\u53c2\u8003\u6587\u6863 \u4e2a\u4eba\u535a\u5ba2 \u6ce8\u89e3 \u4f5c\u7528 @Length(min = 2, max = 20, message = \u201c\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \u201c\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32 @Pattern \u7528\u6cd5 \u5339\u914d\u6c49\u5b57\u548c\u5b57\u6bcd @Pattern(regexp = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\") \u5b9e\u9a8c 1. \u9a8c\u8bc1\u5b57\u6bcd\u548c\u6c49\u5b57\u5360\u7528\u7684\u5927\u5c0f \u6548\u9a8c\u6ce8\u89e3 @Length(min = 1,max = 4) \u8f93\u5165\u56db\u4e2a\u6c49\u5b57\u6ca1\u95ee\u9898 \u4e94\u4e2a\u6c49\u5b57\u6709\u95ee\u9898 \u56db\u4e2a\u5b57\u6bcd\u6ca1\u95ee\u9898 \u4e94\u4e2a\u5b57\u6bcd\u5b58\u5728\u95ee\u9898 String s1 = \"qwe\"; String s2 = \"\u79d1\u5b66\"; System.out.println(s1.length()); 3 System.out.println(s2.length()); 2 System.out.println(s1.getBytes().length); 3 System.out.println(s2.getBytes().length); 6","title":"\u53c2\u6570\u6548\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%8F%82%E6%95%B0%E6%95%88%E9%AA%8C/#_1","text":"\u4e2a\u4eba\u535a\u5ba2 \u6ce8\u89e3 \u4f5c\u7528 @Length(min = 2, max = 20, message = \u201c\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \u201c\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32","title":"\u53c2\u8003\u6587\u6863"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%8F%82%E6%95%B0%E6%95%88%E9%AA%8C/#pattern","text":"\u5339\u914d\u6c49\u5b57\u548c\u5b57\u6bcd @Pattern(regexp = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\")","title":"@Pattern \u7528\u6cd5"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%8F%82%E6%95%B0%E6%95%88%E9%AA%8C/#_2","text":"","title":"\u5b9e\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%8F%82%E6%95%B0%E6%95%88%E9%AA%8C/#1","text":"\u6548\u9a8c\u6ce8\u89e3 @Length(min = 1,max = 4) \u8f93\u5165\u56db\u4e2a\u6c49\u5b57\u6ca1\u95ee\u9898 \u4e94\u4e2a\u6c49\u5b57\u6709\u95ee\u9898 \u56db\u4e2a\u5b57\u6bcd\u6ca1\u95ee\u9898 \u4e94\u4e2a\u5b57\u6bcd\u5b58\u5728\u95ee\u9898 String s1 = \"qwe\"; String s2 = \"\u79d1\u5b66\"; System.out.println(s1.length()); 3 System.out.println(s2.length()); 2 System.out.println(s1.getBytes().length); 3 System.out.println(s2.getBytes().length); 6","title":"1. \u9a8c\u8bc1\u5b57\u6bcd\u548c\u6c49\u5b57\u5360\u7528\u7684\u5927\u5c0f"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/","text":"\u4ece\u6570\u636e\u5e93\u62ff\u6570\u636e\u9047\u5230\u7684\u95ee\u9898 \u7ec4\u5408\u5bf9\u8c61\u7684\u67e5\u8be2 \u5199\u8de8\u8868\u67e5\u8be2\u7684sql \u5b9a\u4e49\u5bf9\u5e94\u7684BO \u5bf9\u8c61 resultType \u4e3aBO \u7c7b\u578b \u7ec4\u5408\u5bf9\u8c61\u4e00\u5bf9\u591a\u67e5\u8be2 select u.username,group_concat(r.name),min(r.priority) from user u left join user_role ur on u.id = ur.user_id left outer join role r on r.id = ur.role_id group by username \u6570\u636e\u4e4b\u95f4\u7684\u62f7\u8d1d Orika https://blog.csdn.net/weixin_38331049/article/details/118682486 BeanUtils.copyProperties() \u65f6\u95f4\u7684\u5904\u7406 \u5982\u679c\u9700\u8981\u5e8f\u5217\u5316\u7684 JsonForamt \u6765\u56de\u90fd\u8981jackjson \u624d\u80fd\u751f\u6548 ```java @NoArgsConstructor @AllArgsConstructor @Data public class Person { private Long id; @Length(min = 2, max = 20, message = \"\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\") private String name; @Range(min = 0,max = 100,message = \"\u5e74\u9f84\u4e0d\u5728\u6709\u6548\u8303\u56f4\u5185\") private Integer age; @NotNull @JsonFormat( pattern = DatePattern.NORM_DATETIME_PATTERN,timezone=\"GMT+8\") private LocalDateTime birthday; } ``` java @PostMapping(\"/add/person\") public Collection<Person> addPerson(@Validated @RequestBody Person person){ persons.put(person.getId(),person); return persons.values(); // return JSON.toJSONString(persons.values()); // final ObjectMapper objectMapper = new ObjectMapper(); // return objectMapper.writeValueAsString(persons.values()); } \u672c\u5730\u65e5\u671f\u5e8f\u5217\u5316 java final LocalDateTime now = LocalDateTime.now(); final String format = now.format(DatePattern.CHINESE_DATE_TIME_FORMATTER); System.out.println(format); \u5b57\u6bb5\u7684\u6548\u9a8c \u5728\u65b9\u6cd5\u52a0 Validated https://mp.csdn.net/mp_blog/creation/success/123602054 \u679a\u4e3e\u7c7b\u578b\u7684\u5904\u7406 \u5c06Integer \u901a\u8fc7\u679a\u4e3e\u89e3\u6790 \u53c2\u8003\u6587\u6863 \u5165\u95e8_MyBatis\u4e2d\u6587\u7f51","title":"\u5f00\u53d1\u6982\u53d9"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_1","text":"","title":"\u4ece\u6570\u636e\u5e93\u62ff\u6570\u636e\u9047\u5230\u7684\u95ee\u9898"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_2","text":"\u5199\u8de8\u8868\u67e5\u8be2\u7684sql \u5b9a\u4e49\u5bf9\u5e94\u7684BO \u5bf9\u8c61 resultType \u4e3aBO \u7c7b\u578b","title":"\u7ec4\u5408\u5bf9\u8c61\u7684\u67e5\u8be2"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_3","text":"select u.username,group_concat(r.name),min(r.priority) from user u left join user_role ur on u.id = ur.user_id left outer join role r on r.id = ur.role_id group by username","title":"\u7ec4\u5408\u5bf9\u8c61\u4e00\u5bf9\u591a\u67e5\u8be2"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_4","text":"Orika https://blog.csdn.net/weixin_38331049/article/details/118682486 BeanUtils.copyProperties()","title":"\u6570\u636e\u4e4b\u95f4\u7684\u62f7\u8d1d"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_5","text":"\u5982\u679c\u9700\u8981\u5e8f\u5217\u5316\u7684 JsonForamt \u6765\u56de\u90fd\u8981jackjson \u624d\u80fd\u751f\u6548 ```java @NoArgsConstructor @AllArgsConstructor @Data public class Person { private Long id; @Length(min = 2, max = 20, message = \"\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\") private String name; @Range(min = 0,max = 100,message = \"\u5e74\u9f84\u4e0d\u5728\u6709\u6548\u8303\u56f4\u5185\") private Integer age; @NotNull @JsonFormat( pattern = DatePattern.NORM_DATETIME_PATTERN,timezone=\"GMT+8\") private LocalDateTime birthday; } ``` java @PostMapping(\"/add/person\") public Collection<Person> addPerson(@Validated @RequestBody Person person){ persons.put(person.getId(),person); return persons.values(); // return JSON.toJSONString(persons.values()); // final ObjectMapper objectMapper = new ObjectMapper(); // return objectMapper.writeValueAsString(persons.values()); } \u672c\u5730\u65e5\u671f\u5e8f\u5217\u5316 java final LocalDateTime now = LocalDateTime.now(); final String format = now.format(DatePattern.CHINESE_DATE_TIME_FORMATTER); System.out.println(format);","title":"\u65f6\u95f4\u7684\u5904\u7406"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_6","text":"\u5728\u65b9\u6cd5\u52a0 Validated https://mp.csdn.net/mp_blog/creation/success/123602054","title":"\u5b57\u6bb5\u7684\u6548\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_7","text":"\u5c06Integer \u901a\u8fc7\u679a\u4e3e\u89e3\u6790","title":"\u679a\u4e3e\u7c7b\u578b\u7684\u5904\u7406"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%A6%82%E5%8F%99/#_8","text":"\u5165\u95e8_MyBatis\u4e2d\u6587\u7f51","title":"\u53c2\u8003\u6587\u6863"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E5%BC%80%E5%8F%91%E6%B3%A8%E6%84%8F/","text":"\u4e0d\u8981\u76f8\u4fe1\u524d\u7aef \u5e95\u5c42\u5f00\u53d1\u6ce8\u610f\u5b57\u6bb5\u6548\u9a8c \u4f20\u96c6\u5408\u53c2\u6570\u7528\u7c7b\u4f3cCollection \u627f\u63a5 \u4e0d\u8981Long \u8f6cInteger \u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u629b\u51fa\u5f02\u5e38 \u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u662fResult.fail() Result.ok() \u4e00\u4e2a\u5185\u90e8\u6548\u9a8c\uff0c\u653e\u56de\u5bf9\u8c61\u6ca1\u6cd5\u4f20\u9012\u7ed9\u524d\u7aef\u65f6\u5019\uff0c\u629b\u51fa\u5f02\u5e38\uff0c\u8ba9\u5ba2\u6237\u7aef\u505a\u7edf\u4e00\u5904\u7406\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u5168\u5c40\u7684\u8fd4\u56de\u3002 \u5982\u679c\u5728\u4e3b\u6d41\u7a0b\u51fa\u73b0\u4e1a\u52a1bug,Result.fail(\u201c\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u6709\u8bef\u201d),\u5176\u5b9e\u629b\u5f02\u5e38\u88ab\u5904\u7406\u5176\u5b9e\u4e5f\u662fResult.fail() \u6b63\u5e38\u6ca1\u6709\u6570\u636e\u8fd4\u56de\u7a7a\u96c6\u5408\u4ee5\u53ca\u6b63\u5e38\u8fd4\u56de","title":"\u5f00\u53d1\u6ce8\u610f"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/","text":"\u51c6\u5907\u6761\u4ef6 <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency> \u5feb\u901f\u5f00\u59cb \u5728controller \u4e0a\u6dfb\u52a0\u6548\u9a8c\u6ce8\u89e3 java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; } \u5728\u5b9e\u4f53\u7c7b\u6dfb\u52a0\u6548\u9a8c java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; } \u5e38\u7528\u6548\u9a8c \u6ce8\u89e3 \u4f5c\u7528 @Length(min = 2, max = 20, message = \"\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\") \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \"\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\") private Integer age; \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32 \u52a0\u5728DTO \u4e0a\u4e0d\u751f\u6548 url \u53ef\u4ee5 - _ \u533a\u5206\u5927\u5c0f\u5199[^1] @RequestBody \u4f1a\u53d8\u6210Post \u8bf7\u6c42 \u4f7f\u7528\u6848\u4f8b \u5d4c\u5957\u6548\u9a8c controlller \u52a0@Validated java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; } \u5185\u90e8\u7c7b\u52a0@Valid ```java @NoArgsConstructor @AllArgsConstructor @Data public class UserDTO { @Length(min = 0,max = 10) private String username; @NotBlank private String password; @NotNull @Valid private Role role; } ``` \u5e38\u89c1\u95ee\u9898 \u5982\u4f55\u914d\u7f6e\u5feb\u901f\u5931\u8d25 @Bean public Validator validator() { ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class) .configure() // \u5feb\u901f\u5931\u8d25\u6a21\u5f0f .failFast(true) .buildValidatorFactory(); return validatorFactory.getValidator(); } @Valid\u548c@Validated\u533a\u522b \u5e95\u5c42\u90fd\u662f Hibernate Validator \u533a\u522b @Valid @Validated \u63d0\u4f9b\u8005 JSR-303\u89c4\u8303 Spring \u662f\u5426\u652f\u6301\u5206\u7ec4 \u4e0d\u652f\u6301 \u652f\u6301 \u6807\u6ce8\u4f4d\u7f6e METHOD(\u65b9\u6cd5), FIELD(\u5b57\u6bb5), CONSTRUCTOR(\u6784\u9020\u51fd\u6570), PARAMETER(\u53c2\u6570), TYPE_USE() TYPE, METHOD, PARAMETER \u5d4c\u5957\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 @Validated \u53ef\u4ee5\u7528\u5728controller\u4e0a @Valid\u4e0d\u884c PARAMETER \u53c2\u8003\u6587\u6863 \u5b98\u65b9\u6587\u6863 @Valid\u548c@Validated\u533a\u522b Spring Validation\u6700\u4f73\u5b9e\u8df5\u53ca\u5176\u5b9e\u73b0\u539f\u7406\uff0c\u53c2\u6570\u6821\u9a8c\u6ca1\u90a3\u4e48\u7b80\u5355\uff01 - \u6398\u91d1 (juejin.cn) Spring Boot \u4f18\u96c5\u5730\u5b9e\u73b0\u63a5\u53e3\u53c2\u6570\u6821\u9a8c - \u6398\u91d1 (juejin.cn) \u5f15\u7528 [^1]:\u7f51\u5740 http://www.chenggongla.com/studio/ \u548c http://www.chenggongla.com/Studio/ \u662f\u4e0d\u4e00\u6837\u7684\uff0c\u540e\u8005\u6709\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u4f1a\u65e0\u6cd5\u8bbf\u95ee\u3002\u90a3\u4e48\u7f51\u5740\u94fe\u63a5\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\u5462\uff1fURL\u7684\u7ed3\u6784\u662f\uff1a[\u534f\u8bae]\ud83d\ude15/[\u57df\u540d]/[\u8def\u5f84]\u534f\u8bae\u548c\u57df\u540d\u90e8\u5206\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u8def\u5f84\u90e8\u5206\u5219\u6839\u636e\u670d\u52a1\u5668\u5e73\u53f0\u800c\u5b9a\u3002Windows \u548c Mac OS X \u7cfb\u7edf\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u800c\u91c7\u7528UNIX\u548cLinux\u7cfb\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u8bf7\u5927\u5bb6\u8981\u6ce8\u610f\u3002","title":"\u6548\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_1","text":"<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency>","title":"\u51c6\u5907\u6761\u4ef6"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_2","text":"\u5728controller \u4e0a\u6dfb\u52a0\u6548\u9a8c\u6ce8\u89e3 java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; } \u5728\u5b9e\u4f53\u7c7b\u6dfb\u52a0\u6548\u9a8c java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; }","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_3","text":"\u6ce8\u89e3 \u4f5c\u7528 @Length(min = 2, max = 20, message = \"\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\") \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \"\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\") private Integer age; \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32 \u52a0\u5728DTO \u4e0a\u4e0d\u751f\u6548 url \u53ef\u4ee5 - _ \u533a\u5206\u5927\u5c0f\u5199[^1] @RequestBody \u4f1a\u53d8\u6210Post \u8bf7\u6c42","title":"\u5e38\u7528\u6548\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_4","text":"","title":"\u4f7f\u7528\u6848\u4f8b"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_5","text":"controlller \u52a0@Validated java @PostMapping(\"/v1/user/valid\") public Result<List<User>> listUser(@Validated @RequestBody UserDTO userDTO){ return null; } \u5185\u90e8\u7c7b\u52a0@Valid ```java @NoArgsConstructor @AllArgsConstructor @Data public class UserDTO { @Length(min = 0,max = 10) private String username; @NotBlank private String password; @NotNull @Valid private Role role; } ```","title":"\u5d4c\u5957\u6548\u9a8c"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_6","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_7","text":"@Bean public Validator validator() { ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class) .configure() // \u5feb\u901f\u5931\u8d25\u6a21\u5f0f .failFast(true) .buildValidatorFactory(); return validatorFactory.getValidator(); }","title":"\u5982\u4f55\u914d\u7f6e\u5feb\u901f\u5931\u8d25"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#validvalidated-hibernate-validator","text":"\u533a\u522b @Valid @Validated \u63d0\u4f9b\u8005 JSR-303\u89c4\u8303 Spring \u662f\u5426\u652f\u6301\u5206\u7ec4 \u4e0d\u652f\u6301 \u652f\u6301 \u6807\u6ce8\u4f4d\u7f6e METHOD(\u65b9\u6cd5), FIELD(\u5b57\u6bb5), CONSTRUCTOR(\u6784\u9020\u51fd\u6570), PARAMETER(\u53c2\u6570), TYPE_USE() TYPE, METHOD, PARAMETER \u5d4c\u5957\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 @Validated \u53ef\u4ee5\u7528\u5728controller\u4e0a @Valid\u4e0d\u884c PARAMETER","title":"@Valid\u548c@Validated\u533a\u522b \u5e95\u5c42\u90fd\u662f Hibernate Validator"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_8","text":"\u5b98\u65b9\u6587\u6863 @Valid\u548c@Validated\u533a\u522b Spring Validation\u6700\u4f73\u5b9e\u8df5\u53ca\u5176\u5b9e\u73b0\u539f\u7406\uff0c\u53c2\u6570\u6821\u9a8c\u6ca1\u90a3\u4e48\u7b80\u5355\uff01 - \u6398\u91d1 (juejin.cn) Spring Boot \u4f18\u96c5\u5730\u5b9e\u73b0\u63a5\u53e3\u53c2\u6570\u6821\u9a8c - \u6398\u91d1 (juejin.cn)","title":"\u53c2\u8003\u6587\u6863"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E6%95%88%E9%AA%8C/#_9","text":"[^1]:\u7f51\u5740 http://www.chenggongla.com/studio/ \u548c http://www.chenggongla.com/Studio/ \u662f\u4e0d\u4e00\u6837\u7684\uff0c\u540e\u8005\u6709\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u4f1a\u65e0\u6cd5\u8bbf\u95ee\u3002\u90a3\u4e48\u7f51\u5740\u94fe\u63a5\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\u5462\uff1fURL\u7684\u7ed3\u6784\u662f\uff1a[\u534f\u8bae]\ud83d\ude15/[\u57df\u540d]/[\u8def\u5f84]\u534f\u8bae\u548c\u57df\u540d\u90e8\u5206\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u8def\u5f84\u90e8\u5206\u5219\u6839\u636e\u670d\u52a1\u5668\u5e73\u53f0\u800c\u5b9a\u3002Windows \u548c Mac OS X \u7cfb\u7edf\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u800c\u91c7\u7528UNIX\u548cLinux\u7cfb\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u8bf7\u5927\u5bb6\u8981\u6ce8\u610f\u3002","title":"\u5f15\u7528"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98/","text":"","title":"\u89c4\u8303\u95ee\u9898"},{"location":"srping%20%E7%B3%BB%E5%88%97/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98/#_1","text":"","title":""},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/es/es/","text":"https://blog.csdn.net/sinat_24044957/article/details/120049955 Index lifecycle actions - Delete - \u300aElasticsearch v7.9 Reference\u300b - \u4e66\u6808\u7f51 \u00b7 BookStack 179 elasticsearch\u6280\u672f\u89e3\u6790\u4e0e\u5b9e\u6218","title":"Es"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/nacos/KubeSphere%20%E9%83%A8%E7%BD%B2%20nacos/","text":"","title":"KubeSphere \u90e8\u7f72 nacos"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/nacos/nacos%E5%91%BD%E4%BB%A4/","text":"\u5355\u673a\u6a21\u5f0f\u542f\u52a8 sh startup.sh -m standalone","title":"Nacos\u547d\u4ee4"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/","text":"\u53c2\u8003\u94fe\u63a5 Core Concept - Apache RocketMQ RocketMQ MD \u5f00\u53d1\u6307\u5357 \u5b98\u7f51 MQ \u4e2d\u6587\u6848\u4f8b\u6587\u6863 \u89c6\u9891\u5f04\u61c2\u67b6\u6784 \u95ee\u9898 \u95ee\u9898\u5982\u4f55\u53d1\u751f\u548c\u63a5\u53d7\u6d88\u606f\u7684\uff1f MQ \u5982\u4f55\u5b58\u50a8\u6d88\u606f \u6709\u54ea\u4e9b\u53d1\u9001\u6d88\u606f\u7684\u6a21\u5f0f ultiple paradigms of sending: synchronous, asynchronous and one-way.","title":"RocketMQ\u5168\u666f\u56fe"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/#_1","text":"Core Concept - Apache RocketMQ RocketMQ MD \u5f00\u53d1\u6307\u5357 \u5b98\u7f51 MQ \u4e2d\u6587\u6848\u4f8b\u6587\u6863 \u89c6\u9891\u5f04\u61c2\u67b6\u6784","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/#_2","text":"","title":"\u95ee\u9898"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/#_3","text":"","title":"\u95ee\u9898\u5982\u4f55\u53d1\u751f\u548c\u63a5\u53d7\u6d88\u606f\u7684\uff1f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/#mq","text":"","title":"MQ \u5982\u4f55\u5b58\u50a8\u6d88\u606f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ%E5%85%A8%E6%99%AF%E5%9B%BE/#_4","text":"ultiple paradigms of sending: synchronous, asynchronous and one-way.","title":"\u6709\u54ea\u4e9b\u53d1\u9001\u6d88\u606f\u7684\u6a21\u5f0f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketMQ%20%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u53c2\u8003\u6587\u6863 https://rocketmq.apache.org/docs/%E4%BB%8B%E7%BB%8D/03whatis","title":"rocketMQ \u5b98\u65b9\u6587\u6863\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketMQ%20%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"https://rocketmq.apache.org/docs/%E4%BB%8B%E7%BB%8D/03whatis","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E5%9F%BA%E6%9C%AC%E6%A0%B7%E4%BE%8B/","text":"\u53d1\u751f\u540c\u6b65\u6d88\u606f \u53d1\u9001\u5f02\u6b65\u6d88\u606f \u5f02\u6b65\u6d88\u606f\u901a\u5e38\u7528\u5728\u5bf9\u54cd\u5e94\u65f6\u95f4\u654f\u611f\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u5373\u53d1\u9001\u7aef\u4e0d\u80fd\u5bb9\u5fcd\u957f\u65f6\u95f4\u5730\u7b49\u5f85Broker\u7684\u54cd\u5e94 \u5355\u5411\u53d1\u9001\u6d88\u606f \u8fd9\u79cd\u65b9\u5f0f\u4e3b\u8981\u7528\u5728\u4e0d\u7279\u522b\u5173\u5fc3\u53d1\u9001\u7ed3\u679c\u7684\u573a\u666f\uff0c\u4f8b\u5982\u65e5\u5fd7\u53d1\u9001\u3002 MQ \u7684\u542f\u52a8 https://blog.csdn.net/fyihdg/article/details/124603758 \u5148\u542f\u52a8nameserver \u5728\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\u884c\u542f\u52a8 broker start mqbroker.cmd -n 127.0.0.1:9876 autoCreateTopicEnable=true \u63a7\u5236\u53f0\u542f\u52a8","title":"Rocketmq \u57fa\u672c\u6837\u4f8b"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E5%9F%BA%E6%9C%AC%E6%A0%B7%E4%BE%8B/#_1","text":"","title":"\u53d1\u751f\u540c\u6b65\u6d88\u606f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E5%9F%BA%E6%9C%AC%E6%A0%B7%E4%BE%8B/#_2","text":"\u5f02\u6b65\u6d88\u606f\u901a\u5e38\u7528\u5728\u5bf9\u54cd\u5e94\u65f6\u95f4\u654f\u611f\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u5373\u53d1\u9001\u7aef\u4e0d\u80fd\u5bb9\u5fcd\u957f\u65f6\u95f4\u5730\u7b49\u5f85Broker\u7684\u54cd\u5e94","title":"\u53d1\u9001\u5f02\u6b65\u6d88\u606f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E5%9F%BA%E6%9C%AC%E6%A0%B7%E4%BE%8B/#_3","text":"\u8fd9\u79cd\u65b9\u5f0f\u4e3b\u8981\u7528\u5728\u4e0d\u7279\u522b\u5173\u5fc3\u53d1\u9001\u7ed3\u679c\u7684\u573a\u666f\uff0c\u4f8b\u5982\u65e5\u5fd7\u53d1\u9001\u3002","title":"\u5355\u5411\u53d1\u9001\u6d88\u606f"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E5%9F%BA%E6%9C%AC%E6%A0%B7%E4%BE%8B/#mq","text":"https://blog.csdn.net/fyihdg/article/details/124603758 \u5148\u542f\u52a8nameserver \u5728\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\u884c\u542f\u52a8 broker start mqbroker.cmd -n 127.0.0.1:9876 autoCreateTopicEnable=true \u63a7\u5236\u53f0\u542f\u52a8","title":"MQ \u7684\u542f\u52a8"},{"location":"%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rocketmq%20%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8/","text":"","title":"Rocketmq \u63a7\u5236\u53f0\u4f7f\u7528"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/mybatis%20%E7%BC%96%E5%86%99/","text":"\u67e5\u770b\u5b98\u65b9\u6587\u6863\u5373\u53ef https://mybatis.org/mybatis-3/zh/dynamic-sql.html \u7ec6\u8282 mybatis \u8054\u8868\u67e5\u8be2 \u7ed3\u8bba \u8054\u8868\u7684\u4e3b\u8868\u7528on \u6761\u4ef6\u7b5b\u9009\u59cb\u7ec8\u4f1a\u51fa\u6765 where \u624d\u80fd\u6b63\u5728\u7684\u7b5b\u9009 create table teacher ( id int auto_increment primary key, name varchar(20) null ); create table student ( id int auto_increment primary key, teacher_id int not null, name varchar(20) not null ); select t.name,s.name from teacher t left join student s on t.id = s.teacher_id; ![[Pasted image 20221230142954.png]] select t.name,s.name from teacher t left join student s on t.id = s.teacher_id and t.id = 2; ![[Pasted image 20221230143314.png]] group by \u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"Mybatis \u7f16\u5199"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/mybatis%20%E7%BC%96%E5%86%99/#_1","text":"","title":"\u7ec6\u8282"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/mybatis%20%E7%BC%96%E5%86%99/#mybatis","text":"\u7ed3\u8bba \u8054\u8868\u7684\u4e3b\u8868\u7528on \u6761\u4ef6\u7b5b\u9009\u59cb\u7ec8\u4f1a\u51fa\u6765 where \u624d\u80fd\u6b63\u5728\u7684\u7b5b\u9009 create table teacher ( id int auto_increment primary key, name varchar(20) null ); create table student ( id int auto_increment primary key, teacher_id int not null, name varchar(20) not null ); select t.name,s.name from teacher t left join student s on t.id = s.teacher_id; ![[Pasted image 20221230142954.png]] select t.name,s.name from teacher t left join student s on t.id = s.teacher_id and t.id = 2; ![[Pasted image 20221230143314.png]]","title":"mybatis \u8054\u8868\u67e5\u8be2"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/mybatis%20%E7%BC%96%E5%86%99/#group-by","text":"\u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"group by"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%AE%9E%E4%BD%93%E7%B1%BB/","text":"DTO\u53c2\u6570\u6548\u9a8c @Length(min = 2, max = 20, message = \u201c\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \u201c\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\u201d) private Integer age; \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32 \u624b\u673a\u53f7\u6548\u9a8c @Pattern(regexp=\"^((13[0-9])|(14[5,6,7,9])|(15[^4])|(16[2,5,6,7])|(17[0-9])|(18[0-9])|(19[1,3,5,8,9]))\\d{8}$\", message=\"\u624b\u673a\u53f7\u683c\u5f0f\u4e0d\u6b63\u786e\") @Pattern(regexp = \"^[a-zA-Z\\u4E00-\\u9FFF]+$\", message = \"\u8054\u7cfb\u4eba\u540d\u79f0\u53ea\u80fd\u8f93\u5165\u4e2d\u82f1\u6587\u5b57\u7b26\") \u6570\u636e\u5e93\u5b9e\u4f53 @Data @NoArgsConstructor @TableName(value = \"mybaties.goods\") public class Goods{ @TableId(value = \"id\", type = IdType.INPUT) private Integer id; @TableField(value = \"`name`\") private String name; @TableField(value = \"brand\") private String brand; // @JsonFormat(pattern = DatePattern.NORM_DATETIME_PATTERN) // \u524d\u53f0\u5411\u540e\u53f0\u4f20\u65e5\u671f\u7684\u63a5\u6536\u6a21\u578b @TableField(value = \"gmt_time\") private LocalDateTime gmtTime; @TableLogic private Integer isDeleted; }","title":"\u5b9e\u4f53\u7c7b"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%AE%9E%E4%BD%93%E7%B1%BB/#dto","text":"@Length(min = 2, max = 20, message = \u201c\u59d3\u540d\u57282-10\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u201d) \u7528\u4e8e\u6548\u9a8c\u6587\u672c @Range(min = 0, max = 120, message = \u201c\u5e74\u9f84\u57280\u5230120\u4e4b\u95f4\u201d) private Integer age; \u7528\u4e8e\u6548\u9a8c\u6570\u5b57 @NotEmpty \u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4 \u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a,\u96c6\u5408\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u80fd\u4e3a0* @NotNull\uff1a \u7528\u4e8e\u6548\u9a8c\u5bf9\u8c61 @Pattern(regexp = \u201c[abc]\u201d)\uff1a \u6b63\u5219\u6548\u9a8c @NotBlank\uff1a \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u68c0\u67e5\u65f6\u4f1a\u5c06\u7a7a\u683c\u5ffd\u7565 \u7528\u6765\u6548\u9a8c\u5b57\u7b26\u4e32 \u624b\u673a\u53f7\u6548\u9a8c @Pattern(regexp=\"^((13[0-9])|(14[5,6,7,9])|(15[^4])|(16[2,5,6,7])|(17[0-9])|(18[0-9])|(19[1,3,5,8,9]))\\d{8}$\", message=\"\u624b\u673a\u53f7\u683c\u5f0f\u4e0d\u6b63\u786e\") @Pattern(regexp = \"^[a-zA-Z\\u4E00-\\u9FFF]+$\", message = \"\u8054\u7cfb\u4eba\u540d\u79f0\u53ea\u80fd\u8f93\u5165\u4e2d\u82f1\u6587\u5b57\u7b26\")","title":"DTO\u53c2\u6570\u6548\u9a8c"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%AE%9E%E4%BD%93%E7%B1%BB/#_1","text":"@Data @NoArgsConstructor @TableName(value = \"mybaties.goods\") public class Goods{ @TableId(value = \"id\", type = IdType.INPUT) private Integer id; @TableField(value = \"`name`\") private String name; @TableField(value = \"brand\") private String brand; // @JsonFormat(pattern = DatePattern.NORM_DATETIME_PATTERN) // \u524d\u53f0\u5411\u540e\u53f0\u4f20\u65e5\u671f\u7684\u63a5\u6536\u6a21\u578b @TableField(value = \"gmt_time\") private LocalDateTime gmtTime; @TableLogic private Integer isDeleted; }","title":"\u6570\u636e\u5e93\u5b9e\u4f53"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E4%B9%89/","text":"\u5b57\u7b26\u96c6\u7f16\u7801 https://juejin.cn/post/6995483137904115719#heading-6 \u63a8\u8350\u65b9\u6848\uff1autf8mb4_general_ci \u533a\u5206\u5927\u5c0f\u5199\u63a8\u8350\uff1a utf8mb4_bin \u5173\u952e\u4e94\u4e2a\u5b57\u6bb5 created_by varchar(32) default '' not null comment '\u521b\u5efa\u4eba', gmt_create timestamp default CURRENT_TIMESTAMP not null comment '\u521b\u5efa\u65f6\u95f4', modified_by varchar(32) default '' not null comment '\u66f4\u65b0\u4eba', gmt_modified timestamp default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '\u66f4\u65b0\u65f6\u95f4', is_deleted int default 0 not null comment '\u662f\u5426\u5220\u9664 0\uff1a\u5426\uff1b1\uff1a\u662f' \u5e38\u7528\u6570\u636e\u5bf9\u8c61\u7279\u6027 \u5e38\u7528\u59d3\u540d\u624b\u673a\u53f7\u5c31\u7528 varchar \u5373\u53ef \u65e5\u671f\u63a8\u8350\u4f7f\u7528\u65f6\u95f4\u6233 \u6216\u8005datetime \u90fd\u53ef\u4ee5 \u91d1\u989d\u7528DECIMAL(m,n) \u603b\u5171m\u4f4d \u4fdd\u7559\u5c0f\u6570\u70b9\u540en\u4f4d https://www.jianshu.com/p/a5564aac7def \u72b6\u6001\u7528 tintint \u666e\u901a\u6570\u503c\u7528int https://www.cnblogs.com/xrq730/p/8446246.html ![[Pasted image 20221230152219.png]] ![[Pasted image 20221230150531.png]] \u91d1\u989d","title":"\u6570\u636e\u5e93\u5b9a\u4e49"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E4%B9%89/#_1","text":"https://juejin.cn/post/6995483137904115719#heading-6 \u63a8\u8350\u65b9\u6848\uff1autf8mb4_general_ci \u533a\u5206\u5927\u5c0f\u5199\u63a8\u8350\uff1a utf8mb4_bin","title":"\u5b57\u7b26\u96c6\u7f16\u7801"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E4%B9%89/#_2","text":"created_by varchar(32) default '' not null comment '\u521b\u5efa\u4eba', gmt_create timestamp default CURRENT_TIMESTAMP not null comment '\u521b\u5efa\u65f6\u95f4', modified_by varchar(32) default '' not null comment '\u66f4\u65b0\u4eba', gmt_modified timestamp default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '\u66f4\u65b0\u65f6\u95f4', is_deleted int default 0 not null comment '\u662f\u5426\u5220\u9664 0\uff1a\u5426\uff1b1\uff1a\u662f'","title":"\u5173\u952e\u4e94\u4e2a\u5b57\u6bb5"},{"location":"%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E4%B9%89/#_3","text":"\u5e38\u7528\u59d3\u540d\u624b\u673a\u53f7\u5c31\u7528 varchar \u5373\u53ef \u65e5\u671f\u63a8\u8350\u4f7f\u7528\u65f6\u95f4\u6233 \u6216\u8005datetime \u90fd\u53ef\u4ee5 \u91d1\u989d\u7528DECIMAL(m,n) \u603b\u5171m\u4f4d \u4fdd\u7559\u5c0f\u6570\u70b9\u540en\u4f4d https://www.jianshu.com/p/a5564aac7def \u72b6\u6001\u7528 tintint \u666e\u901a\u6570\u503c\u7528int https://www.cnblogs.com/xrq730/p/8446246.html ![[Pasted image 20221230152219.png]] ![[Pasted image 20221230150531.png]] \u91d1\u989d","title":"\u5e38\u7528\u6570\u636e\u5bf9\u8c61\u7279\u6027"},{"location":"%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90/","text":"\u5982\u4f55\u4f18\u96c5\u5730\u53c2\u4e0e\u5f00\u6e90\u5f00\u53d1\uff1f - \u77e5\u4e4e (zhihu.com) \u6709\u54ea\u4e9b\u4f18\u79c0\u7684Java\u5f00\u6e90\u9879\u76ee\uff1f - \u77e5\u4e4e (zhihu.com) \u5f53\u524d\u53c2\u4e0e\u7684\u9879\u76ee https://gitee.com/zhongfucheng/austin.git","title":"\u53c2\u4e0e\u5f00\u6e90"},{"location":"%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90/#_1","text":"https://gitee.com/zhongfucheng/austin.git","title":"\u5f53\u524d\u53c2\u4e0e\u7684\u9879\u76ee"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/K8S%20%E5%85%A5%E9%97%A8/","text":"\u670d\u52a1\u5668\u5b89\u88c5k8s all in one https://kubesphere.io/zh/docs/v3.3/quick-start/all-in-one-on-linu \u5b89\u88c5\u8fde\u63a5 https://blog.csdn.net/yaxuan88521/article/details/120880892 \u51fa\u73b0\u9519\u8bef\u6267\u884c\uff1a https://blog.csdn.net/ichen820/article/details/119851189","title":"K8S \u5165\u95e8"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/K8S%20%E5%85%A5%E9%97%A8/#k8s-all-in-one","text":"https://kubesphere.io/zh/docs/v3.3/quick-start/all-in-one-on-linu \u5b89\u88c5\u8fde\u63a5 https://blog.csdn.net/yaxuan88521/article/details/120880892 \u51fa\u73b0\u9519\u8bef\u6267\u884c\uff1a https://blog.csdn.net/ichen820/article/details/119851189","title":"\u670d\u52a1\u5668\u5b89\u88c5k8s all in one"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/kubesphere/","text":"\u53c2\u8003\u6587\u6863 \u4e2d\u6587\u5b98\u65b9\u6587\u6863","title":"Kubesphere"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/kubesphere/#_1","text":"\u4e2d\u6587\u5b98\u65b9\u6587\u6863","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/spring-cloud%20%E5%AD%A6%E4%B9%A0/","text":"\u4ecb\u7ecd \u672c\u8282\u4e3b\u8981\u662f\u626b\u76f2spring-cloud \u57fa\u7840\u77e5\u8bc6\u7684 https://www.bilibili.com/video/BV1R7411774f?p=16&vd_source=6df4aa7b31f2694a11d8f97c71a807d8 https://www.bilibili.com/video/BV18E411x7eT?p=66&vd_source=6df4aa7b31f2694a11d8f97c71a807d8 \u53c2\u8003\u6587\u6863 spring-cloud \u5f00\u6e90\u9879\u76ee CSDN \u5f00\u6e90\u9879\u76ee\u4ecb\u7ecd \u51e4\u51f0\u67b6\u6784 \u4e2a\u4ebademo \u9879\u76ee \u9879\u76ee\u4fe1\u606f \u5de5\u7a0b\u5730\u5740 \u5de5\u7a0b\u76f8\u5173\u6587\u4ef6\uff1aD:\\code\\idea\\spring-cloud-alibaba-personal","title":"Spring cloud \u5b66\u4e60"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/spring-cloud%20%E5%AD%A6%E4%B9%A0/#_1","text":"\u672c\u8282\u4e3b\u8981\u662f\u626b\u76f2spring-cloud \u57fa\u7840\u77e5\u8bc6\u7684 https://www.bilibili.com/video/BV1R7411774f?p=16&vd_source=6df4aa7b31f2694a11d8f97c71a807d8 https://www.bilibili.com/video/BV18E411x7eT?p=66&vd_source=6df4aa7b31f2694a11d8f97c71a807d8","title":"\u4ecb\u7ecd"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/spring-cloud%20%E5%AD%A6%E4%B9%A0/#_2","text":"spring-cloud \u5f00\u6e90\u9879\u76ee CSDN \u5f00\u6e90\u9879\u76ee\u4ecb\u7ecd \u51e4\u51f0\u67b6\u6784 \u4e2a\u4ebademo \u9879\u76ee","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/spring-cloud%20%E5%AD%A6%E4%B9%A0/#_3","text":"\u5de5\u7a0b\u5730\u5740 \u5de5\u7a0b\u76f8\u5173\u6587\u4ef6\uff1aD:\\code\\idea\\spring-cloud-alibaba-personal","title":"\u9879\u76ee\u4fe1\u606f"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/spring-cloud%20%E5%AD%A6%E4%B9%A0/#_4","text":"","title":""},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/%E7%BD%91%E5%85%B3/","text":"\u53c2\u8003\u6587\u6863 https://cloud.spring.io/spring-cloud-gateway/reference/html/","title":"\u7f51\u5173"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/%E7%BD%91%E5%85%B3/#_1","text":"https://cloud.spring.io/spring-cloud-gateway/reference/html/","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E5%BE%AE%E6%9C%8D%E5%8A%A1/spring-cloud/%E7%BD%91%E5%85%B3%E9%9B%86%E6%88%90Oauth2%E8%AF%A6%E8%A7%A3/","text":"","title":"\u7f51\u5173\u96c6\u6210Oauth2\u8be6\u89e3"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/","text":"\u4f7f\u7528\u6848\u4f8b \u53c2\u8003\u6587\u6863 MyBatis\u6ce8\u89e3\uff083\u79cd\u7c7b\u578b\uff09 (biancheng.net) \u5bf9\u8c61\u6a21\u677f \u5b9e\u4f53\u7c7b @Data @NoArgsConstructor @TableName(value = \"mybaties.goods\") public class Goods implements Serializable { @TableId(value = \"id\", type = IdType.INPUT) private Integer id; @TableField(value = \"`name`\") private String name; @TableField(value = \"brand\") private String brand; // @JsonFormat(pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSS\", timezone = \"GMT+8\") // \u524d\u53f0\u5411\u540e\u53f0\u4f20\u65e5\u671f\u7684\u63a5\u6536\u6a21\u578b @DateTimeFormat(pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSS\") @TableField(value = \"gmt_time\") private LocalDateTime gmtTime; @TableLogic private Integer isDeleted; private static final long serialVersionUID = 1L; } mybatis \u7ec6\u8282 sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868 \u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868 group by \u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e #{} ${} \u533a\u522b 1\u3001#{} \u89e3\u6790\u4e3a\u4e00\u4e2aJDBC\u9884\u7f16\u8bd1\u8bed\u53e5\uff08prepared statement\uff09\u7684\u53c2\u6570\u6807\u8bb0\u7b26\uff0c\u628a\u53c2\u6570\u90e8\u5206\u7528\u5360\u4f4d\u7b26\uff1f\u4ee3\u66ff\u3002\u52a8\u6001\u89e3\u6790\u4e3a\uff1a select * from t_user where username = \uff1f ;\u800c\u4f20\u5165\u7684\u53c2\u6570\u5c06\u4f1a\u7ecf\u8fc7PreparedStatement\u65b9\u6cd5\u7684\u5f3a\u5236\u7c7b\u578b\u68c0\u67e5\u548c\u5b89\u5168\u68c0\u67e5\u7b49\u5904\u7406\uff0c\u6700\u540e\u4f5c\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u4f20\u5165\u3002 2\u3001${} \u8fd9\u79cd\u65b9\u5f0f\u53ea\u4f1a\u505a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u5728\u52a8\u6001SQL\u89e3\u6790\u9636\u6bb5\u5c06\u4f1a\u8fdb\u884c\u53d8\u91cf\u66ff\u6362\uff0c\u5047\u5982\u4f20\u9012\u7684\u53c2\u6570\u4e3aAlice\uff0c\u6700\u7ec8\u5904\u7406\u7ed3\u679c\u5982\u4e0b\uff1aselect * from t_user where username = 'Alice' ; \u8fd9\u6837\u5728\u9884\u7f16\u8bd1\u4e4b\u524d\u7684sql\u8bed\u53e5\u5df2\u7ecf\u4e0d\u5305\u542b\u53d8\u91cf\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\\${} \u53d8\u91cf\u7684\u66ff\u6362\u9636\u6bb5\u662f\u5728\u52a8\u6001SQL\u89e3\u6790\u9636\u6bb5\u3002 \u8868\u540d \u884c\u540d\u7528 ${} Mybatis\u5c5e\u6027useGeneratedKeys,keyProperty,keyColumn\u7684\u4f7f\u7528 https://blog.csdn.net/csxypr/article/details/97522028 \u5728\u4f7f\u7528keyProperty\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u7adf\u7136\u8fd8\u6709\u4e2a\u7c7b\u4f3c\u7684\u5c5e\u6027\uff1akeyColumn\uff0c\u90a3\u4e48\u4ed6\u662f\u5e72\u4ec0\u4e48\u7528\u7684\u5462? keyColumn\u7528\u4e8e\u6307\u5b9a\u6570\u636e\u5e93table\u4e2d\u7684\u4e3b\u952e \u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u4e09\u4e2a\u5c5e\u6027\u540c\u65f6\u4f7f\u7528\u65f6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u5e93\u4e2d\u81ea\u589e\u957f\u7684\u4e3b\u952e\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u4e3b\u952e\u7684\u503c\u8fd4\u56de\u7ed9keyProperty\u4e2d\u5199\u597d\u7684\u5b57\u6bb5 mybaties \u65f6\u95f4\u5b57\u6bb5\u8bbe\u7f6eLocalDateTime\u5904\u7406 \u7c7b\u578b\u5904\u7406\u5668\uff08typeHandlers\uff09 <result column=\"gmt_time\" jdbcType=\"TIMESTAMP\" property=\"gmtTime\" typeHandler=\"org.apache.ibatis.type.LocalDateTimeTypeHandler\" javaType=\"java.time.LocalDateTime\"/> java\u4e2d\u7684\u5b9e\u4f53\u7c7b\u7528\u5230\u4e86LocalDateTime \u7c7b\u578b\u3002 \u5728\u8f6c\u6362\u65f6\u5019\u62a5\u9519 Error attempting to get column \u2018XXX\u2019 from result set. Cause: java.sql. \u89e3\u51b3\u65b9\u6cd5\u6700\u4e3a\u7b80\u5355\u3002 \u662f\u56e0\u4e3acom.alibaba \u7684\u7248\u672c\u95ee\u9898\u3002 \u5207\u6362\u7248\u672c\u53f7\u52301.1.22 \u5373\u53ef\u6d88\u9664\u95ee\u9898 com.alibaba druid-spring-boot-starter 1.1.22 \u5728Entity\u5b9e\u4f53\u7c7b\u5185java8\u7279\u6027\u7684LocalDateTime\u8981\u6c42mysql-connector-java\u7248\u672c\u4e0d\u80fd\u4f4e\u4e8e5.1.37 \u8fd4\u56de\u503c\u89e3\u6790 https://www.cnblogs.com/szrs/p/15257883.html @Override public PageInfo getSyncstatusPages(Syncstatus vo, int pageNo, int pageSize) { PageHelper.startPage(pageNo, pageSize); /* //\u67e5\u770b\u589e\u5220\u6539\u67e5\u7684\u8fd4\u56de\u503c //1\u65b0\u589e\uff1a\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //1-1\u65b0\u589e\u4e00\u6761\u6570\u636e:\u63d2\u5165\u6210\u529f,\u8fd4\u56de\u503c\u4e3a1 int insert_success1 = yylfHttpServletMapper.insert(\"8\", \"2\", \"1\"); //1-2\u65b0\u589e\u591a\u6761\u6570\u636e:\u63d2\u5165\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u63d2\u5165\u7684\u6570\u636e\u6761\u6570\uff0c\u5f53\u6709\u4e00\u6761\u6570\u636e\u9519\u8bef\u65f6\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u63d2\u5165\u5931\u8d25 int insert_success2 = yylfHttpServletMapper.insert_duotiao(\"7\"); String insert_success3 = yylfHttpServletMapper.insert_duotiao_String(\"7\");//\u4e0d\u652f\u6301\u8fd4\u56de\u503c\u4e3aString\u7c7b\u578b //1-3\u65b0\u589e\u4e00\u6761\u6570\u636e:\u63d2\u5165\u5931\u8d25\uff1a\u4e3b\u952e\u51b2\u7a81\uff0c\u4f1a\u76f4\u63a5\u62a5\u5f02\u5e38 int insert_failed = yylfHttpServletMapper.insert(\"1\", \"2\", \"1\"); //1-4\u63d2\u5165null\uff1a\u5c5e\u6027\u4e3anull\uff0c\u5982\u679c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u5141\u8bb8\u4e3anull\uff0c\u63d2\u5165\u4e00\u6761\u6240\u6709\u503c\u5747\u4e3anull\u7684\u6570\u636e Syncstatus syncstatus1 = null; yylfHttpServletMapper.insertSyncstatus(syncstatus1); //1-5\u63d2\u5165\u4e00\u4e2a\u6ca1\u6709\u8d4b\u503c\u7684\u5bf9\u8c61\uff1a\u5c5e\u6027\u4e3anull\uff0c\u5982\u679c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u5141\u8bb8\u4e3anull\uff0c\u63d2\u5165\u4e00\u6761\u6240\u6709\u503c\u5747\u4e3anull\u7684\u6570\u636e Syncstatus syncstatus2 = new Syncstatus(); yylfHttpServletMapper.insertSyncstatus(syncstatus2);*/ /*//2\u5220\u9664:\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //2-1\u5220\u9664\u6210\u529f\uff1a\u6ca1\u6709\u6570\u636e:\u8fd4\u56de\u503c\u4e3a0 int delete_success1 = yylfHttpServletMapper.delete(\"0\"); //2-2\u5220\u9664\u6210\u529f\uff1a\u6709\u591a\u6761\u6570\u636e\uff1a\u8fd4\u56de\u503c\u4e3a\u5220\u9664\u7684\u6570\u636e\u6761\u6570 int delete_success2 = yylfHttpServletMapper.delete_systemcode(\"2\"); //2-3\u5220\u9664\u5931\u8d25\uff1a\u4f8b\u5982\u6709\u5916\u952e:\u62a5\u5f02\u5e38 int delete_fail = yylfHttpServletMapper.delete(\"1\");*/ //3\u66f4\u65b0:\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //3-1\u66f4\u65b0\u6210\u529f\uff1a\u6ca1\u6709\u6570\u636e\uff0c\u8fd4\u56de\u503c\u4e3a0 int update_no = yylfHttpServletMapper.update_no(\"0\"); //3-2\u66f4\u65b0\u6210\u529f\uff1a\u6709\u591a\u6761\u6570\u636e\uff0c\u8fd4\u56de\u66f4\u65b0\u7684\u6570\u636e\u6761\u6570 int update_duotiao = yylfHttpServletMapper.update_duotiao_systemcode(\"2\"); //3-3\u66f4\u65b0\u5931\u8d25\uff1a\u4f8b\u5982\u6709\u5916\u952e\uff0c\u62a5\u5f02\u5e38 //int update_fail = yylfHttpServletMapper.update_fail(\"1\"); //4\u67e5\u8be2 //4-1 \u6ca1\u6570:String \u7c7b\u578b\u8fd4\u56denull Object object = yylfHttpServletMapper.select(\"0\"); //4-1 \u6ca1\u6570:\u96c6\u5408 \u7c7b\u578b\u8fd4\u56de[]\u7a7a\u96c6\u5408 Syncstatus syncstatus3 = new Syncstatus(); syncstatus3.setStatus(\"7\"); List<Syncstatus> page0 = yylfHttpServletMapper.getSyncstatusList(syncstatus3); //4-1 \u6ca1\u6570:int \u7c7b\u578b\u8fd4\u56denull,\u5982\u679c\u5b9a\u4e49\u4e3aint\u4f1a\u62a5\u9519\u3002\u56e0\u4e3a\u6ca1\u6570\u65f6\u8fd4\u56denull\uff0c\u53ef\u4ee5\u5c06\u8fd4\u56de\u7c7b\u578b\u6539\u4e3aString String i = yylfHttpServletMapper.select_int(0); //4-1\uff1a\u5f53\u8fd4\u56de\u503c\u4e3a\u5bf9\u8c61\u65f6\uff0c\u82e5\u8fd4\u56de\u503c\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56denull //4-2 \u6709\u6570 List<Syncstatus> pages = yylfHttpServletMapper.getSyncstatusList(vo); return new PageInfo<Syncstatus>(pages); } \u9047\u5230\u7684\u5f02\u5e38 \u5173\u4e8eMybatis\u7684Mapper\u4e2d\u591a\u53c2\u6570\u65b9\u6cd5\u4e0d\u4f7f\u7528@param\u6ce8\u89e3\u62a5\u9519\u7684\u95ee\u9898 https://blog.csdn.net/u011821334/article/details/101763001","title":"\u4f7f\u7528\u6848\u4f8b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_1","text":"","title":"\u4f7f\u7528\u6848\u4f8b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_2","text":"MyBatis\u6ce8\u89e3\uff083\u79cd\u7c7b\u578b\uff09 (biancheng.net)","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_3","text":"","title":"\u5bf9\u8c61\u6a21\u677f"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_4","text":"@Data @NoArgsConstructor @TableName(value = \"mybaties.goods\") public class Goods implements Serializable { @TableId(value = \"id\", type = IdType.INPUT) private Integer id; @TableField(value = \"`name`\") private String name; @TableField(value = \"brand\") private String brand; // @JsonFormat(pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSS\", timezone = \"GMT+8\") // \u524d\u53f0\u5411\u540e\u53f0\u4f20\u65e5\u671f\u7684\u63a5\u6536\u6a21\u578b @DateTimeFormat(pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSS\") @TableField(value = \"gmt_time\") private LocalDateTime gmtTime; @TableLogic private Integer isDeleted; private static final long serialVersionUID = 1L; }","title":"\u5b9e\u4f53\u7c7b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#mybatis","text":"","title":"mybatis \u7ec6\u8282"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#sql","text":"\u8fc7\u6ee4on \u540e\u9762 and\u8fc7\u6ee4\u53ea\u80fd\u8fc7\u6ee4\u526f\u8868","title":"sql \u4e0d\u5141\u8bb8\u5148\u8fc7\u6ee4\u518d\u8054\u8868"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#group-by","text":"\u548c max min group_concat \u4f7f\u7528 \u4e00\u5bf9\u591a\u7684\u60c5\u51b5\u6ca1\u6709group by\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u6570\u636e","title":"group by"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_5","text":"1\u3001#{} \u89e3\u6790\u4e3a\u4e00\u4e2aJDBC\u9884\u7f16\u8bd1\u8bed\u53e5\uff08prepared statement\uff09\u7684\u53c2\u6570\u6807\u8bb0\u7b26\uff0c\u628a\u53c2\u6570\u90e8\u5206\u7528\u5360\u4f4d\u7b26\uff1f\u4ee3\u66ff\u3002\u52a8\u6001\u89e3\u6790\u4e3a\uff1a select * from t_user where username = \uff1f ;\u800c\u4f20\u5165\u7684\u53c2\u6570\u5c06\u4f1a\u7ecf\u8fc7PreparedStatement\u65b9\u6cd5\u7684\u5f3a\u5236\u7c7b\u578b\u68c0\u67e5\u548c\u5b89\u5168\u68c0\u67e5\u7b49\u5904\u7406\uff0c\u6700\u540e\u4f5c\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u4f20\u5165\u3002 2\u3001${} \u8fd9\u79cd\u65b9\u5f0f\u53ea\u4f1a\u505a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u5728\u52a8\u6001SQL\u89e3\u6790\u9636\u6bb5\u5c06\u4f1a\u8fdb\u884c\u53d8\u91cf\u66ff\u6362\uff0c\u5047\u5982\u4f20\u9012\u7684\u53c2\u6570\u4e3aAlice\uff0c\u6700\u7ec8\u5904\u7406\u7ed3\u679c\u5982\u4e0b\uff1aselect * from t_user where username = 'Alice' ; \u8fd9\u6837\u5728\u9884\u7f16\u8bd1\u4e4b\u524d\u7684sql\u8bed\u53e5\u5df2\u7ecf\u4e0d\u5305\u542b\u53d8\u91cf\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\\${} \u53d8\u91cf\u7684\u66ff\u6362\u9636\u6bb5\u662f\u5728\u52a8\u6001SQL\u89e3\u6790\u9636\u6bb5\u3002 \u8868\u540d \u884c\u540d\u7528 ${}","title":"#{} ${} \u533a\u522b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#mybatisusegeneratedkeyskeypropertykeycolumn","text":"https://blog.csdn.net/csxypr/article/details/97522028 \u5728\u4f7f\u7528keyProperty\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u7adf\u7136\u8fd8\u6709\u4e2a\u7c7b\u4f3c\u7684\u5c5e\u6027\uff1akeyColumn\uff0c\u90a3\u4e48\u4ed6\u662f\u5e72\u4ec0\u4e48\u7528\u7684\u5462? keyColumn\u7528\u4e8e\u6307\u5b9a\u6570\u636e\u5e93table\u4e2d\u7684\u4e3b\u952e \u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u4e09\u4e2a\u5c5e\u6027\u540c\u65f6\u4f7f\u7528\u65f6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u5e93\u4e2d\u81ea\u589e\u957f\u7684\u4e3b\u952e\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u4e3b\u952e\u7684\u503c\u8fd4\u56de\u7ed9keyProperty\u4e2d\u5199\u597d\u7684\u5b57\u6bb5","title":"Mybatis\u5c5e\u6027useGeneratedKeys,keyProperty,keyColumn\u7684\u4f7f\u7528"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#mybaties-localdatetime","text":"\u7c7b\u578b\u5904\u7406\u5668\uff08typeHandlers\uff09 <result column=\"gmt_time\" jdbcType=\"TIMESTAMP\" property=\"gmtTime\" typeHandler=\"org.apache.ibatis.type.LocalDateTimeTypeHandler\" javaType=\"java.time.LocalDateTime\"/> java\u4e2d\u7684\u5b9e\u4f53\u7c7b\u7528\u5230\u4e86LocalDateTime \u7c7b\u578b\u3002 \u5728\u8f6c\u6362\u65f6\u5019\u62a5\u9519 Error attempting to get column \u2018XXX\u2019 from result set. Cause: java.sql. \u89e3\u51b3\u65b9\u6cd5\u6700\u4e3a\u7b80\u5355\u3002 \u662f\u56e0\u4e3acom.alibaba \u7684\u7248\u672c\u95ee\u9898\u3002 \u5207\u6362\u7248\u672c\u53f7\u52301.1.22 \u5373\u53ef\u6d88\u9664\u95ee\u9898 com.alibaba druid-spring-boot-starter 1.1.22 \u5728Entity\u5b9e\u4f53\u7c7b\u5185java8\u7279\u6027\u7684LocalDateTime\u8981\u6c42mysql-connector-java\u7248\u672c\u4e0d\u80fd\u4f4e\u4e8e5.1.37","title":"mybaties \u65f6\u95f4\u5b57\u6bb5\u8bbe\u7f6eLocalDateTime\u5904\u7406"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_6","text":"https://www.cnblogs.com/szrs/p/15257883.html @Override public PageInfo getSyncstatusPages(Syncstatus vo, int pageNo, int pageSize) { PageHelper.startPage(pageNo, pageSize); /* //\u67e5\u770b\u589e\u5220\u6539\u67e5\u7684\u8fd4\u56de\u503c //1\u65b0\u589e\uff1a\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //1-1\u65b0\u589e\u4e00\u6761\u6570\u636e:\u63d2\u5165\u6210\u529f,\u8fd4\u56de\u503c\u4e3a1 int insert_success1 = yylfHttpServletMapper.insert(\"8\", \"2\", \"1\"); //1-2\u65b0\u589e\u591a\u6761\u6570\u636e:\u63d2\u5165\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u63d2\u5165\u7684\u6570\u636e\u6761\u6570\uff0c\u5f53\u6709\u4e00\u6761\u6570\u636e\u9519\u8bef\u65f6\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u63d2\u5165\u5931\u8d25 int insert_success2 = yylfHttpServletMapper.insert_duotiao(\"7\"); String insert_success3 = yylfHttpServletMapper.insert_duotiao_String(\"7\");//\u4e0d\u652f\u6301\u8fd4\u56de\u503c\u4e3aString\u7c7b\u578b //1-3\u65b0\u589e\u4e00\u6761\u6570\u636e:\u63d2\u5165\u5931\u8d25\uff1a\u4e3b\u952e\u51b2\u7a81\uff0c\u4f1a\u76f4\u63a5\u62a5\u5f02\u5e38 int insert_failed = yylfHttpServletMapper.insert(\"1\", \"2\", \"1\"); //1-4\u63d2\u5165null\uff1a\u5c5e\u6027\u4e3anull\uff0c\u5982\u679c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u5141\u8bb8\u4e3anull\uff0c\u63d2\u5165\u4e00\u6761\u6240\u6709\u503c\u5747\u4e3anull\u7684\u6570\u636e Syncstatus syncstatus1 = null; yylfHttpServletMapper.insertSyncstatus(syncstatus1); //1-5\u63d2\u5165\u4e00\u4e2a\u6ca1\u6709\u8d4b\u503c\u7684\u5bf9\u8c61\uff1a\u5c5e\u6027\u4e3anull\uff0c\u5982\u679c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u5141\u8bb8\u4e3anull\uff0c\u63d2\u5165\u4e00\u6761\u6240\u6709\u503c\u5747\u4e3anull\u7684\u6570\u636e Syncstatus syncstatus2 = new Syncstatus(); yylfHttpServletMapper.insertSyncstatus(syncstatus2);*/ /*//2\u5220\u9664:\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //2-1\u5220\u9664\u6210\u529f\uff1a\u6ca1\u6709\u6570\u636e:\u8fd4\u56de\u503c\u4e3a0 int delete_success1 = yylfHttpServletMapper.delete(\"0\"); //2-2\u5220\u9664\u6210\u529f\uff1a\u6709\u591a\u6761\u6570\u636e\uff1a\u8fd4\u56de\u503c\u4e3a\u5220\u9664\u7684\u6570\u636e\u6761\u6570 int delete_success2 = yylfHttpServletMapper.delete_systemcode(\"2\"); //2-3\u5220\u9664\u5931\u8d25\uff1a\u4f8b\u5982\u6709\u5916\u952e:\u62a5\u5f02\u5e38 int delete_fail = yylfHttpServletMapper.delete(\"1\");*/ //3\u66f4\u65b0:\u8fd4\u56de\u503c\u81ea\u5df1\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662fvoid\uff0cint //3-1\u66f4\u65b0\u6210\u529f\uff1a\u6ca1\u6709\u6570\u636e\uff0c\u8fd4\u56de\u503c\u4e3a0 int update_no = yylfHttpServletMapper.update_no(\"0\"); //3-2\u66f4\u65b0\u6210\u529f\uff1a\u6709\u591a\u6761\u6570\u636e\uff0c\u8fd4\u56de\u66f4\u65b0\u7684\u6570\u636e\u6761\u6570 int update_duotiao = yylfHttpServletMapper.update_duotiao_systemcode(\"2\"); //3-3\u66f4\u65b0\u5931\u8d25\uff1a\u4f8b\u5982\u6709\u5916\u952e\uff0c\u62a5\u5f02\u5e38 //int update_fail = yylfHttpServletMapper.update_fail(\"1\"); //4\u67e5\u8be2 //4-1 \u6ca1\u6570:String \u7c7b\u578b\u8fd4\u56denull Object object = yylfHttpServletMapper.select(\"0\"); //4-1 \u6ca1\u6570:\u96c6\u5408 \u7c7b\u578b\u8fd4\u56de[]\u7a7a\u96c6\u5408 Syncstatus syncstatus3 = new Syncstatus(); syncstatus3.setStatus(\"7\"); List<Syncstatus> page0 = yylfHttpServletMapper.getSyncstatusList(syncstatus3); //4-1 \u6ca1\u6570:int \u7c7b\u578b\u8fd4\u56denull,\u5982\u679c\u5b9a\u4e49\u4e3aint\u4f1a\u62a5\u9519\u3002\u56e0\u4e3a\u6ca1\u6570\u65f6\u8fd4\u56denull\uff0c\u53ef\u4ee5\u5c06\u8fd4\u56de\u7c7b\u578b\u6539\u4e3aString String i = yylfHttpServletMapper.select_int(0); //4-1\uff1a\u5f53\u8fd4\u56de\u503c\u4e3a\u5bf9\u8c61\u65f6\uff0c\u82e5\u8fd4\u56de\u503c\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56denull //4-2 \u6709\u6570 List<Syncstatus> pages = yylfHttpServletMapper.getSyncstatusList(vo); return new PageInfo<Syncstatus>(pages); }","title":"\u8fd4\u56de\u503c\u89e3\u6790"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#_7","text":"","title":"\u9047\u5230\u7684\u5f02\u5e38"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis%20%E5%85%A8%E8%A7%A3/#mybatismapperparam","text":"https://blog.csdn.net/u011821334/article/details/101763001","title":"\u5173\u4e8eMybatis\u7684Mapper\u4e2d\u591a\u53c2\u6570\u65b9\u6cd5\u4e0d\u4f7f\u7528@param\u6ce8\u89e3\u62a5\u9519\u7684\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis/mybatis-plus/","text":"","title":"Mybatis plus"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis-plus/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E8%AF%A6%E8%A7%A3/","text":"\u53c2\u8003\u6587\u6863 https://baomidou.com/pages/10c804/#in \u95ee\u9898 1. in \u53canot in\u95ee\u9898 in \u548c not in \u4e00\u5b9a\u4e0d\u8981\u53c2\u4e0e\u5230\u975e\u7a7a\u8ba1\u7b97 \u4e4b\u524d\u5c31\u8981\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a 2.exist having \u7684\u4f5c\u7528 exsit \u7528\u4e24\u4e2a\u8868\u5339\u914d\u7684https://blog.csdn.net/zhangzehai2234/article/details/124652056 having \u548c\u805a\u5408\u51fd\u6570\u4e00\u8d77\u7528 https://www.runoob.com/sql/sql-having.html \u7b5b\u9009\u5206\u7ec4\u540e\u7684\u6570\u636e","title":"\u5b98\u65b9\u6587\u6863\u8be6\u89e3"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis-plus/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E8%AF%A6%E8%A7%A3/#_1","text":"https://baomidou.com/pages/10c804/#in","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis-plus/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E8%AF%A6%E8%A7%A3/#_2","text":"","title":"\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis-plus/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E8%AF%A6%E8%A7%A3/#1-in-not-in","text":"in \u548c not in \u4e00\u5b9a\u4e0d\u8981\u53c2\u4e0e\u5230\u975e\u7a7a\u8ba1\u7b97 \u4e4b\u524d\u5c31\u8981\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a","title":"1. in \u53canot in\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mybatis-plus/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E8%AF%A6%E8%A7%A3/#2exist-having","text":"exsit \u7528\u4e24\u4e2a\u8868\u5339\u914d\u7684https://blog.csdn.net/zhangzehai2234/article/details/124652056 having \u548c\u805a\u5408\u51fd\u6570\u4e00\u8d77\u7528 https://www.runoob.com/sql/sql-having.html \u7b5b\u9009\u5206\u7ec4\u540e\u7684\u6570\u636e","title":"2.exist having \u7684\u4f5c\u7528"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u9632\u6b62\u81ea\u589e\u8fc7\u5927 alter table tablename AUTO_INCREMENT=0 \u66f4\u6539\u552f\u4e00\u7d22\u5f15 alter table use_info add unique index agd(user_account_id,game_id,daily_date); alter table user_info add unique key agdkey(user_account_id,game_id,daily_date); \u6539\u6570\u636e\u5e93\u7f16\u7801 1.\u4fee\u6539\u6570\u636e\u5e93\u7684\u7f16\u7801 \u5c06\u6570\u636e\u5e93\uff08test\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER DATABASE test DEFAULT CHARACTER SET utf8 COLLATE utf8_bin; 2.\u4fee\u6539\u8868\u7684\u7f16\u7801 \u5c06\u8868\uff08test\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER TABLE test DEFAULT CHARACTER SET utf8 COLLATE utf8_bin; 3.\u4fee\u6539\u5b57\u6bb5\u7684\u7f16\u7801 \u5c06\u8868\uff08test\uff09\u4e2d\u5b57\u6bb5\uff08name\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER TABLE test CHANGE name name VARCHAR( 10 ) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL; mysql\u6570\u636e\u5e93\u4fee\u6539\u6570\u636e\u5e93\u7f16\u7801\uff0c\u5b57\u6bb5\u7f16\u7801\u4e0e\u8868\u7f16\u7801 https://blog.51cto.com/woshisap/5652126","title":"Mysql \u5e38\u7528\u547d\u4ee4"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"alter table tablename AUTO_INCREMENT=0","title":"\u9632\u6b62\u81ea\u589e\u8fc7\u5927"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"alter table use_info add unique index agd(user_account_id,game_id,daily_date); alter table user_info add unique key agdkey(user_account_id,game_id,daily_date);","title":"\u66f4\u6539\u552f\u4e00\u7d22\u5f15"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"1.\u4fee\u6539\u6570\u636e\u5e93\u7684\u7f16\u7801 \u5c06\u6570\u636e\u5e93\uff08test\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER DATABASE test DEFAULT CHARACTER SET utf8 COLLATE utf8_bin; 2.\u4fee\u6539\u8868\u7684\u7f16\u7801 \u5c06\u8868\uff08test\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER TABLE test DEFAULT CHARACTER SET utf8 COLLATE utf8_bin; 3.\u4fee\u6539\u5b57\u6bb5\u7684\u7f16\u7801 \u5c06\u8868\uff08test\uff09\u4e2d\u5b57\u6bb5\uff08name\uff09\u7684\u7f16\u7801\u65b9\u5f0f\u4fee\u6539\u4e3autf8\uff0c\u5982\uff1a ALTER TABLE test CHANGE name name VARCHAR( 10 ) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL; mysql\u6570\u636e\u5e93\u4fee\u6539\u6570\u636e\u5e93\u7f16\u7801\uff0c\u5b57\u6bb5\u7f16\u7801\u4e0e\u8868\u7f16\u7801 https://blog.51cto.com/woshisap/5652126","title":"\u6539\u6570\u636e\u5e93\u7f16\u7801"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%20%E7%B4%A2%E5%BC%95%E7%AF%87/","text":"","title":"Mysql \u7d22\u5f15\u7bc7"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-varchar%20%E8%AF%A6%E8%A7%A3/","text":"\u53c2\u8003\u6587\u6863 \u5404\u79cd\u7f16\u7801\u4ecb\u7ecd \u95ee\u9898 utf8-mb4 varchar(10) \u5360\u7528","title":"Mysql varchar \u8be6\u89e3"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-varchar%20%E8%AF%A6%E8%A7%A3/#_1","text":"\u5404\u79cd\u7f16\u7801\u4ecb\u7ecd","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-varchar%20%E8%AF%A6%E8%A7%A3/#_2","text":"utf8-mb4 varchar(10) \u5360\u7528","title":"\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%B2%97%E8%AF%BB/","text":"\u53c2\u8003 https://dev.mysql.com/doc/refman/8.0/en/data-dictionary-schema.html","title":"Mysql\u5b98\u65b9\u6587\u6863\u7c97\u8bfb"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%B2%97%E8%AF%BB/#_1","text":"https://dev.mysql.com/doc/refman/8.0/en/data-dictionary-schema.html","title":"\u53c2\u8003"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E7%BC%96%E7%A8%8B/","text":"\u53c2\u8003 https://dev.mysql.com/doc/refman/8.0/en/user-variables.html \u53d8\u91cf # \u7528\u6237\u53d8\u91cf set @\u53d8\u91cf\u540d=\u8868\u8fbe\u5f0f\uff1b # \u7cfb\u7edf\u53d8\u91cf set @@\u7cfb\u7edf\u53d8\u91cf\u540d(=\u503c) # \u5c40\u90e8\u53d8\u91cf\u58f0\u660e declare \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b\uff1b \u8d4b\u503c\u8bed\u53e5 set \u53d8\u91cf = \u8868\u8fbe\u5f0f select \u8868\u8fbe\u5f0f into \u53d8\u91cf\uff1b//\u4e0d\u4ea7\u751f\u7ed3\u679c\u96c6 select \u53d8\u91cf := \u8868\u8fbe\u5f0f\uff1b//\u4ea7\u751f\u7ed3\u679c\u96c6 set \u53d8\u91cf1 = \u8868\u8fbe\u5f0f1\uff0c\u53d8\u91cf2 = \u8868\u8fbe\u5f0f2\uff0c\u2026\u2026 \u540c\u65f6\u7ed9\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c begin-end \u8bed\u53e5\u5757 # \u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b DELIMITER // DROP PROCEDURE IF EXISTS test; CREATE PROCEDURE test() BEGIN DECLARE i INT; SET i = 0; REPEAT INSERT INTO test VALUES(i+11,'test','20'); \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000# \u5f80test\u8868\u6dfb\u52a0\u6570\u636e SET i = i + 1; \u3000\u3000\u3000\u3000# \u5faa\u73af\u4e00\u6b21,i\u52a0\u4e00 UNTIL i > 10 END REPEAT; \u3000\u3000\u3000\u3000# \u7ed3\u675f\u5faa\u73af\u7684\u6761\u4ef6: \u5f53i\u5927\u4e8e10\u65f6\u8df3\u51farepeat\u5faa\u73af SELECT * FROM test; END // CALL test(); DELIMITER ; # \u521b\u5efa\u51fd\u6570 DELIMITER // create function test1(tid int) returns int begin set @a = 0; select parent_id into @a from menu where id = tid; return @a; end // set global log_bin_trust_function_creators=1; SELECT T2.id, T2.name FROM ( SELECT @r AS _id, (SELECT @r := parent_id FROM auth_resource WHERE id = _id) AS parent_id, #@r\u662fid,\u4e0b\u4e00\u4e2a\u9012\u5f52\u7684id=\u5f53\u524d\u7684parent_id,\u4e0b\u4e00\u4e2a\u9012\u5f52\u7684id\u4f5c\u4e3a\u65b0\u7684parent_id @l := @l + 1 AS lvl FROM # \u4fee\u6539@r \u66f4\u6539168 \u4e3a\u4f60\u7684\u5b50\u83dc\u5355 (SELECT @r := 168, @l := 0) vars, #\u5b9a\u4e49\u53d8\u91cf@r,@l auth_resource h WHERE @r <> 0) T1 #\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\u662f id==0 JOIN auth_resource T2 ON T1._id = T2.id;","title":"Mysql\u7f16\u7a0b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E7%BC%96%E7%A8%8B/#_1","text":"https://dev.mysql.com/doc/refman/8.0/en/user-variables.html","title":"\u53c2\u8003"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E7%BC%96%E7%A8%8B/#_2","text":"# \u7528\u6237\u53d8\u91cf set @\u53d8\u91cf\u540d=\u8868\u8fbe\u5f0f\uff1b # \u7cfb\u7edf\u53d8\u91cf set @@\u7cfb\u7edf\u53d8\u91cf\u540d(=\u503c) # \u5c40\u90e8\u53d8\u91cf\u58f0\u660e declare \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b\uff1b","title":"\u53d8\u91cf"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E7%BC%96%E7%A8%8B/#_3","text":"set \u53d8\u91cf = \u8868\u8fbe\u5f0f select \u8868\u8fbe\u5f0f into \u53d8\u91cf\uff1b//\u4e0d\u4ea7\u751f\u7ed3\u679c\u96c6 select \u53d8\u91cf := \u8868\u8fbe\u5f0f\uff1b//\u4ea7\u751f\u7ed3\u679c\u96c6 set \u53d8\u91cf1 = \u8868\u8fbe\u5f0f1\uff0c\u53d8\u91cf2 = \u8868\u8fbe\u5f0f2\uff0c\u2026\u2026 \u540c\u65f6\u7ed9\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c","title":"\u8d4b\u503c\u8bed\u53e5"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E7%BC%96%E7%A8%8B/#begin-end","text":"# \u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b DELIMITER // DROP PROCEDURE IF EXISTS test; CREATE PROCEDURE test() BEGIN DECLARE i INT; SET i = 0; REPEAT INSERT INTO test VALUES(i+11,'test','20'); \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000# \u5f80test\u8868\u6dfb\u52a0\u6570\u636e SET i = i + 1; \u3000\u3000\u3000\u3000# \u5faa\u73af\u4e00\u6b21,i\u52a0\u4e00 UNTIL i > 10 END REPEAT; \u3000\u3000\u3000\u3000# \u7ed3\u675f\u5faa\u73af\u7684\u6761\u4ef6: \u5f53i\u5927\u4e8e10\u65f6\u8df3\u51farepeat\u5faa\u73af SELECT * FROM test; END // CALL test(); DELIMITER ; # \u521b\u5efa\u51fd\u6570 DELIMITER // create function test1(tid int) returns int begin set @a = 0; select parent_id into @a from menu where id = tid; return @a; end // set global log_bin_trust_function_creators=1; SELECT T2.id, T2.name FROM ( SELECT @r AS _id, (SELECT @r := parent_id FROM auth_resource WHERE id = _id) AS parent_id, #@r\u662fid,\u4e0b\u4e00\u4e2a\u9012\u5f52\u7684id=\u5f53\u524d\u7684parent_id,\u4e0b\u4e00\u4e2a\u9012\u5f52\u7684id\u4f5c\u4e3a\u65b0\u7684parent_id @l := @l + 1 AS lvl FROM # \u4fee\u6539@r \u66f4\u6539168 \u4e3a\u4f60\u7684\u5b50\u83dc\u5355 (SELECT @r := 168, @l := 0) vars, #\u5b9a\u4e49\u53d8\u91cf@r,@l auth_resource h WHERE @r <> 0) T1 #\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\u662f id==0 JOIN auth_resource T2 ON T1._id = T2.id;","title":"begin-end \u8bed\u53e5\u5757"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/","text":"\u53c2\u8003\u6587\u6863 mysql\u5b98\u7f51 bookstack \u6587\u6863 \u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u5b66\u4e60\u70b9 1. \u6570\u636e\u7c7b\u578b\u5927\u5168 2. \u7f16\u7801 \u7ec6\u8282 \u65e5\u671f\u5904\u7406 SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY); \u539f\u5219 \u4e0d\u5b8c\u5907\u8bb0\u5f55\u3001\u53ea\u8bb0\u5f55\u81ea\u5df1\u77e5\u8bc6\u8584\u5f31\u7684\u73af\u8282\u3002","title":"Mysql\u8be6\u89e3"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#_1","text":"mysql\u5b98\u7f51 bookstack \u6587\u6863 \u5b98\u65b9\u4e2d\u6587\u6587\u6863","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#_2","text":"","title":"\u5b66\u4e60\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#1","text":"","title":"1. \u6570\u636e\u7c7b\u578b\u5927\u5168"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#2","text":"","title":"2. \u7f16\u7801"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#_3","text":"","title":"\u7ec6\u8282"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#_4","text":"SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);","title":"\u65e5\u671f\u5904\u7406"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E8%AF%A6%E8%A7%A3/#_5","text":"\u4e0d\u5b8c\u5907\u8bb0\u5f55\u3001\u53ea\u8bb0\u5f55\u81ea\u5df1\u77e5\u8bc6\u8584\u5f31\u7684\u73af\u8282\u3002","title":"\u539f\u5219"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/","text":"Mysql\u4e2d\u7d22\u5f15primary key \u3001unique key \uff1f primary key \u53ea\u80fd\u6709\u4e00\u4e2a unique key \u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e24\u8005\u90fd\u4f1a\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15 \u5982\u4f55\u4fdd\u8bc1\u5e42\u7b49 1. \u7b56\u7565 \u72b6\u6001\u673a \u552f\u4e00\u7d22\u5f15 \u5206\u5e03\u5f0f\u9501 2. \u95ee\u9898 1. \u552f\u4e00\u7d22\u5f15\u548cis_deleted \u51b2\u7a81\u600e\u4e48\u529e varchar(n) \u5b58\u82f1\u6587\u548c\u4e2d\u6587\u7684\u60c5\u51b5 https://blog.csdn.net/sqlquan/article/details/113041833 varchar(n) \u7684\u5355\u4f4d\u662f\u5b57\u7b26 \u65e0\u8bba\u6c49\u5b57\u548c\u82f1\u6587\uff0cmysql\u90fd\u80fd\u5b58\u5165 n \u4e2a\u5b57\u7b26\uff0c\u4ec5\u5b9e\u9645\u5b57\u8282\u957f\u5ea6\u6709\u6240\u533a\u522b\u3002 \u4e0d\u533a\u5206\u5927\u5c0f\u5199 *_bin: \u8868\u793a\u7684\u662fbinary case sensitive collation\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 _cs: case sensitive collation\uff0c\u533a\u5206\u5927\u5c0f\u5199 _ci: case insensitive collation\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199","title":"Mysql\u95ee\u9898\u5927\u5168"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#mysqlprimary-key-unique-key","text":"primary key \u53ea\u80fd\u6709\u4e00\u4e2a unique key \u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e24\u8005\u90fd\u4f1a\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15","title":"Mysql\u4e2d\u7d22\u5f15primary key \u3001unique key \uff1f"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#_1","text":"","title":"\u5982\u4f55\u4fdd\u8bc1\u5e42\u7b49"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#1","text":"\u72b6\u6001\u673a \u552f\u4e00\u7d22\u5f15 \u5206\u5e03\u5f0f\u9501","title":"1. \u7b56\u7565"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#2","text":"1. \u552f\u4e00\u7d22\u5f15\u548cis_deleted \u51b2\u7a81\u600e\u4e48\u529e","title":"2. \u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#varcharn","text":"https://blog.csdn.net/sqlquan/article/details/113041833 varchar(n) \u7684\u5355\u4f4d\u662f\u5b57\u7b26 \u65e0\u8bba\u6c49\u5b57\u548c\u82f1\u6587\uff0cmysql\u90fd\u80fd\u5b58\u5165 n \u4e2a\u5b57\u7b26\uff0c\u4ec5\u5b9e\u9645\u5b57\u8282\u957f\u5ea6\u6709\u6240\u533a\u522b\u3002","title":"varchar(n) \u5b58\u82f1\u6587\u548c\u4e2d\u6587\u7684\u60c5\u51b5"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8/#_2","text":"*_bin: \u8868\u793a\u7684\u662fbinary case sensitive collation\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 _cs: case sensitive collation\uff0c\u533a\u5206\u5927\u5c0f\u5199 _ci: case insensitive collation\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199","title":"\u4e0d\u533a\u5206\u5927\u5c0f\u5199"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql45%E8%AE%B2/Info/","text":"binlog mysql\u670d\u52a1\u5c42\u9762\u7684 redolog \u662finnoDB\u7279\u6709\u7684 \u56e0\u4e3a\u6700\u5f00\u59cbMySQL\u91cc\u5e76\u6ca1\u6709InnoDB\u5f15\u64ce\u3002MySQL\u81ea\u5e26\u7684\u5f15\u64ce\u662fMyISAM\uff0c\u4f46\u662fMyISAM\u6ca1\u6709crash-safe\u7684\u80fd\u529b\uff0cbinlog\u65e5\u5fd7\u53ea\u80fd\u7528\u4e8e\u5f52\u6863\u3002\u800cInnoDB\u662f\u53e6\u4e00\u4e2a\u516c\u53f8\u4ee5\u63d2\u4ef6\u5f62\u5f0f\u5f15\u5165MySQL\u7684\uff0c\u65e2\u7136\u53ea\u4f9d\u9760binlog\u662f\u6ca1\u6709crash-safe\u80fd\u529b\u7684\uff0c\u6240\u4ee5InnoDB\u4f7f\u7528\u53e6\u5916\u4e00\u5957\u65e5\u5fd7\u7cfb\u7edf\u2014\u2014\u4e5f\u5c31\u662fredo log\u6765\u5b9e\u73b0crash-safe\u80fd\u529b\u3002 \u6267\u884c\u5668\u5148\u627e\u5f15\u64ce\u53d6ID=2\u8fd9\u4e00\u884c\u3002ID\u662f\u4e3b\u952e\uff0c\u5f15\u64ce\u76f4\u63a5\u7528\u6811\u641c\u7d22\u627e\u5230\u8fd9\u4e00\u884c\u3002\u5982\u679cID=2\u8fd9\u4e00\u884c\u6240\u5728\u7684\u6570\u636e\u9875\u672c\u6765\u5c31\u5728\u5185\u5b58\u4e2d\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u7ed9\u6267\u884c\u5668\uff1b\u5426\u5219\uff0c\u9700\u8981\u5148\u4ece\u78c1\u76d8\u8bfb\u5165\u5185\u5b58\uff0c\u7136\u540e\u518d\u8fd4\u56de\u3002 \u6267\u884c\u5668\u62ff\u5230\u5f15\u64ce\u7ed9\u7684\u884c\u6570\u636e\uff0c\u628a\u8fd9\u4e2a\u503c\u52a0\u4e0a1\uff0c\u6bd4\u5982\u539f\u6765\u662fN\uff0c\u73b0\u5728\u5c31\u662fN+1\uff0c\u5f97\u5230\u65b0\u7684\u4e00\u884c\u6570\u636e\uff0c\u518d\u8c03\u7528\u5f15\u64ce\u63a5\u53e3\u5199\u5165\u8fd9\u884c\u65b0\u6570\u636e\u3002 \u5f15\u64ce\u5c06\u8fd9\u884c\u65b0\u6570\u636e\u66f4\u65b0\u5230\u5185\u5b58\u4e2d\uff0c\u540c\u65f6\u5c06\u8fd9\u4e2a\u66f4\u65b0\u64cd\u4f5c\u8bb0\u5f55\u5230redo log\u91cc\u9762\uff0c\u6b64\u65f6redo log\u5904\u4e8eprepare\u72b6\u6001\u3002\u7136\u540e\u544a\u77e5\u6267\u884c\u5668\u6267\u884c\u5b8c\u6210\u4e86\uff0c\u968f\u65f6\u53ef\u4ee5\u63d0\u4ea4\u4e8b\u52a1\u3002 \u6267\u884c\u5668\u751f\u6210\u8fd9\u4e2a\u64cd\u4f5c\u7684binlog\uff0c\u5e76\u628abinlog\u5199\u5165\u78c1\u76d8\u3002 \u6267\u884c\u5668\u8c03\u7528\u5f15\u64ce\u7684\u63d0\u4ea4\u4e8b\u52a1\u63a5\u53e3\uff0c\u5f15\u64ce\u628a\u521a\u521a\u5199\u5165\u7684redo log\u6539\u6210\u63d0\u4ea4\uff08commit\uff09\u72b6\u6001\uff0c\u66f4\u65b0\u5b8c\u6210\u3002","title":"Info"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql45%E8%AE%B2/%E6%97%A5%E5%BF%97/","text":"00 \u5f00\u7bc7\u8bcd\u8bb2\u8fd9\u4e00\u6b21\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u641e\u61c2MySQL 01 \u8bb2\u57fa\u7840\u67b6\u6784\uff1a\u4e00\u6761SQL\u67e5\u8be2\u8bed\u53e5\u662f\u5982\u4f55\u6267\u884c\u7684 \ud83d\udc4d 02 \u8bb2\u65e5\u5fd7\u7cfb\u7edf\uff1a\u4e00\u6761SQL\u66f4\u65b0\u8bed\u53e5\u662f\u5982\u4f55\u6267\u884c\u7684 \ud83d\udc4d 03 \u8bb2\u4e8b\u52a1\u9694\u79bb\uff1a\u4e3a\u4ec0\u4e48\u4f60\u6539\u4e86\u6211\u8fd8\u770b\u4e0d\u89c1 04 \u8bb2\u6df1\u5165\u6d45\u51fa\u7d22\u5f15(\u4e0a) \u805a\u65cf\u7d22\u5f15 \u8054\u5408\u7d22\u5f15","title":"\u65e5\u5fd7"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql45%E8%AE%B2/Info/","text":"\u53c2\u8003\u6587\u6863 Mysql 45\u8bb2\u6587\u6863 mysql \u4f18\u8d28B\u7ad9\u89c6\u9891 \u7b14\u8bb0 binlog mysql\u670d\u52a1\u5c42\u9762\u7684 redolog \u662finnoDB\u7279\u6709\u7684 \u56e0\u4e3a\u6700\u5f00\u59cbMySQL\u91cc\u5e76\u6ca1\u6709InnoDB\u5f15\u64ce\u3002MySQL\u81ea\u5e26\u7684\u5f15\u64ce\u662fMyISAM\uff0c\u4f46\u662fMyISAM\u6ca1\u6709crash-safe\u7684\u80fd\u529b\uff0cbinlog\u65e5\u5fd7\u53ea\u80fd\u7528\u4e8e\u5f52\u6863\u3002\u800cInnoDB\u662f\u53e6\u4e00\u4e2a\u516c\u53f8\u4ee5\u63d2\u4ef6\u5f62\u5f0f\u5f15\u5165MySQL\u7684\uff0c\u65e2\u7136\u53ea\u4f9d\u9760binlog\u662f\u6ca1\u6709crash-safe\u80fd\u529b\u7684\uff0c\u6240\u4ee5InnoDB\u4f7f\u7528\u53e6\u5916\u4e00\u5957\u65e5\u5fd7\u7cfb\u7edf\u2014\u2014\u4e5f\u5c31\u662fredo log\u6765\u5b9e\u73b0crash-safe\u80fd\u529b\u3002 \u6267\u884c\u5668\u5148\u627e\u5f15\u64ce\u53d6ID=2\u8fd9\u4e00\u884c\u3002ID\u662f\u4e3b\u952e\uff0c\u5f15\u64ce\u76f4\u63a5\u7528\u6811\u641c\u7d22\u627e\u5230\u8fd9\u4e00\u884c\u3002\u5982\u679cID=2\u8fd9\u4e00\u884c\u6240\u5728\u7684\u6570\u636e\u9875\u672c\u6765\u5c31\u5728\u5185\u5b58\u4e2d\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u7ed9\u6267\u884c\u5668\uff1b\u5426\u5219\uff0c\u9700\u8981\u5148\u4ece\u78c1\u76d8\u8bfb\u5165\u5185\u5b58\uff0c\u7136\u540e\u518d\u8fd4\u56de\u3002 \u6267\u884c\u5668\u62ff\u5230\u5f15\u64ce\u7ed9\u7684\u884c\u6570\u636e\uff0c\u628a\u8fd9\u4e2a\u503c\u52a0\u4e0a1\uff0c\u6bd4\u5982\u539f\u6765\u662fN\uff0c\u73b0\u5728\u5c31\u662fN+1\uff0c\u5f97\u5230\u65b0\u7684\u4e00\u884c\u6570\u636e\uff0c\u518d\u8c03\u7528\u5f15\u64ce\u63a5\u53e3\u5199\u5165\u8fd9\u884c\u65b0\u6570\u636e\u3002 \u5f15\u64ce\u5c06\u8fd9\u884c\u65b0\u6570\u636e\u66f4\u65b0\u5230\u5185\u5b58\u4e2d\uff0c\u540c\u65f6\u5c06\u8fd9\u4e2a\u66f4\u65b0\u64cd\u4f5c\u8bb0\u5f55\u5230redo log\u91cc\u9762\uff0c\u6b64\u65f6redo log\u5904\u4e8eprepare\u72b6\u6001\u3002\u7136\u540e\u544a\u77e5\u6267\u884c\u5668\u6267\u884c\u5b8c\u6210\u4e86\uff0c\u968f\u65f6\u53ef\u4ee5\u63d0\u4ea4\u4e8b\u52a1\u3002 \u6267\u884c\u5668\u751f\u6210\u8fd9\u4e2a\u64cd\u4f5c\u7684binlog\uff0c\u5e76\u628abinlog\u5199\u5165\u78c1\u76d8\u3002 \u6267\u884c\u5668\u8c03\u7528\u5f15\u64ce\u7684\u63d0\u4ea4\u4e8b\u52a1\u63a5\u53e3\uff0c\u5f15\u64ce\u628a\u521a\u521a\u5199\u5165\u7684redo log\u6539\u6210\u63d0\u4ea4\uff08commit\uff09\u72b6\u6001\uff0c\u66f4\u65b0\u5b8c\u6210\u3002 \u4e13\u6709\u540d\u8bcd\u89e3\u91ca \u666e\u901a\u7d22\u5f15\uff1a \u5e94\u8be5\u53ea\u4e3a\u90a3\u4e9b\u6700\u7ecf\u5e38\u51fa\u73b0\u5728\u67e5\u8be2\u6761\u4ef6 \u552f\u4e00\u7d22\u5f15 \uff1a\u5b83\u4e0e\u524d\u9762\u7684\u666e\u901a\u7d22\u5f15\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u5c31\u662f\uff1a\u7d22\u5f15\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\uff0c\u4f46\u5141\u8bb8\u6709\u7a7a\u503c\u3002\u5982\u679c\u662f\u7ec4\u5408\u7d22\u5f15\uff0c\u5219\u5217\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u552f\u4e00","title":"Info"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql45%E8%AE%B2/Info/#_1","text":"Mysql 45\u8bb2\u6587\u6863 mysql \u4f18\u8d28B\u7ad9\u89c6\u9891","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql45%E8%AE%B2/Info/#_2","text":"binlog mysql\u670d\u52a1\u5c42\u9762\u7684 redolog \u662finnoDB\u7279\u6709\u7684 \u56e0\u4e3a\u6700\u5f00\u59cbMySQL\u91cc\u5e76\u6ca1\u6709InnoDB\u5f15\u64ce\u3002MySQL\u81ea\u5e26\u7684\u5f15\u64ce\u662fMyISAM\uff0c\u4f46\u662fMyISAM\u6ca1\u6709crash-safe\u7684\u80fd\u529b\uff0cbinlog\u65e5\u5fd7\u53ea\u80fd\u7528\u4e8e\u5f52\u6863\u3002\u800cInnoDB\u662f\u53e6\u4e00\u4e2a\u516c\u53f8\u4ee5\u63d2\u4ef6\u5f62\u5f0f\u5f15\u5165MySQL\u7684\uff0c\u65e2\u7136\u53ea\u4f9d\u9760binlog\u662f\u6ca1\u6709crash-safe\u80fd\u529b\u7684\uff0c\u6240\u4ee5InnoDB\u4f7f\u7528\u53e6\u5916\u4e00\u5957\u65e5\u5fd7\u7cfb\u7edf\u2014\u2014\u4e5f\u5c31\u662fredo log\u6765\u5b9e\u73b0crash-safe\u80fd\u529b\u3002 \u6267\u884c\u5668\u5148\u627e\u5f15\u64ce\u53d6ID=2\u8fd9\u4e00\u884c\u3002ID\u662f\u4e3b\u952e\uff0c\u5f15\u64ce\u76f4\u63a5\u7528\u6811\u641c\u7d22\u627e\u5230\u8fd9\u4e00\u884c\u3002\u5982\u679cID=2\u8fd9\u4e00\u884c\u6240\u5728\u7684\u6570\u636e\u9875\u672c\u6765\u5c31\u5728\u5185\u5b58\u4e2d\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u7ed9\u6267\u884c\u5668\uff1b\u5426\u5219\uff0c\u9700\u8981\u5148\u4ece\u78c1\u76d8\u8bfb\u5165\u5185\u5b58\uff0c\u7136\u540e\u518d\u8fd4\u56de\u3002 \u6267\u884c\u5668\u62ff\u5230\u5f15\u64ce\u7ed9\u7684\u884c\u6570\u636e\uff0c\u628a\u8fd9\u4e2a\u503c\u52a0\u4e0a1\uff0c\u6bd4\u5982\u539f\u6765\u662fN\uff0c\u73b0\u5728\u5c31\u662fN+1\uff0c\u5f97\u5230\u65b0\u7684\u4e00\u884c\u6570\u636e\uff0c\u518d\u8c03\u7528\u5f15\u64ce\u63a5\u53e3\u5199\u5165\u8fd9\u884c\u65b0\u6570\u636e\u3002 \u5f15\u64ce\u5c06\u8fd9\u884c\u65b0\u6570\u636e\u66f4\u65b0\u5230\u5185\u5b58\u4e2d\uff0c\u540c\u65f6\u5c06\u8fd9\u4e2a\u66f4\u65b0\u64cd\u4f5c\u8bb0\u5f55\u5230redo log\u91cc\u9762\uff0c\u6b64\u65f6redo log\u5904\u4e8eprepare\u72b6\u6001\u3002\u7136\u540e\u544a\u77e5\u6267\u884c\u5668\u6267\u884c\u5b8c\u6210\u4e86\uff0c\u968f\u65f6\u53ef\u4ee5\u63d0\u4ea4\u4e8b\u52a1\u3002 \u6267\u884c\u5668\u751f\u6210\u8fd9\u4e2a\u64cd\u4f5c\u7684binlog\uff0c\u5e76\u628abinlog\u5199\u5165\u78c1\u76d8\u3002 \u6267\u884c\u5668\u8c03\u7528\u5f15\u64ce\u7684\u63d0\u4ea4\u4e8b\u52a1\u63a5\u53e3\uff0c\u5f15\u64ce\u628a\u521a\u521a\u5199\u5165\u7684redo log\u6539\u6210\u63d0\u4ea4\uff08commit\uff09\u72b6\u6001\uff0c\u66f4\u65b0\u5b8c\u6210\u3002","title":"\u7b14\u8bb0"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql45%E8%AE%B2/Info/#_3","text":"\u666e\u901a\u7d22\u5f15\uff1a \u5e94\u8be5\u53ea\u4e3a\u90a3\u4e9b\u6700\u7ecf\u5e38\u51fa\u73b0\u5728\u67e5\u8be2\u6761\u4ef6 \u552f\u4e00\u7d22\u5f15 \uff1a\u5b83\u4e0e\u524d\u9762\u7684\u666e\u901a\u7d22\u5f15\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u5c31\u662f\uff1a\u7d22\u5f15\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\uff0c\u4f46\u5141\u8bb8\u6709\u7a7a\u503c\u3002\u5982\u679c\u662f\u7ec4\u5408\u7d22\u5f15\uff0c\u5219\u5217\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u552f\u4e00","title":"\u4e13\u6709\u540d\u8bcd\u89e3\u91ca"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/mysql45%E8%AE%B2/%E6%97%A5%E5%BF%97/","text":"","title":"\u65e5\u5fd7"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/redis%20%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/","text":"\u53c2\u8003\u6587\u6863 https://www.bookstack.cn/read/Redis-zh/4.md","title":"Redis \u5b98\u65b9\u6587\u6863\u7b14\u8bb0"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/redis%20%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/#_1","text":"https://www.bookstack.cn/read/Redis-zh/4.md","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/","text":"\u53c2\u8003\u8fde\u63a5 redission \u5b98\u7f51 \u5206\u5e03\u5f0f\u9501\u539f\u751f\u5b9e\u73b0\u6848\u4f8b \u4e00\u6b65\u4e00\u6b65\u8fc7\u5ea6\u5230redission \u8bf8\u845b\u8001\u5e08 Redisson \u5b66\u4e60\u6848\u4f8b \u5b9e\u73b0\u6848\u4f8b \u539fredis \u9501\u9047\u5230\u7684\u95ee\u9898 \u4ee3\u7801 @GetMapping(\"/test2/lock\") public String test2() { try { Boolean flag = stringRedisTemplate.opsForValue().setIfAbsent(\"lockKey\", \"koala\"); stringRedisTemplate.expire(\"lockKey\", 10, TimeUnit.SECONDS); if (!flag) { log.info(\"\u5f53\u524d\u4eba\u6570\u8fc7\u591a \u6263\u51cf\u5931\u8d25\"); return \"\u5f53\u524d\u4eba\u6570\u8fc7\u591a \u6263\u51cf\u5931\u8d25\"; } int stock = Integer.parseInt(stringRedisTemplate.opsForValue().get(\"stock\")); if (stock > 0) { int realLock = stock - 1; stringRedisTemplate.opsForValue().set(\"stock\", realLock + \"\"); log.info(\"\u6263\u51cf\u6210\u529f \u5269\u4f59\u5e93\u5b58{}\", realLock); } else { log.info(\"\u6263\u51cf\u5931\u8d25 \u5269\u4f59\u5e93\u5b58{}\", stock); } } finally { stringRedisTemplate.delete(\"lockKey\"); } return \"end\"; } \u95ee\u9898 \u4e0a\u8ff0\u5206\u5e03\u5f0f\u9501\u5df2\u7ecf\u80fd\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\uff0c\u4e0d\u8db3\u4e4b\u5904\u5728\u4e8e\uff0c10\u79d2\u5931\u6548\u4e4b\u524d\u7ebf\u7a0b\u8fd8\u6ca1\u6267\u884c\u5b8c\uff0c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u52a0\u4e86lcokKey\u9501\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u91ca\u653e\u4e86\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u7684\u9501\u3002 Redis\u548cRedisson\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f https://www.zhihu.com/question/376677241 trylock \u53c2\u6570\u4f5c\u7528 // Wait for 100 seconds and automatically unlock it after 10 seconds boolean res = lock.tryLock(100, 10, TimeUnit.SECONDS); \u65e0\u6cd5\u5b9e\u73b0 \u83b7\u53d6\u4e0d\u5230\u9501\u7acb\u5373\u8fd4\u56de \u5e38\u89c1\u95ee\u9898 lock.tryLock()\u4e2dwaittime\u7684\u4e0d\u7406\u89e3 \u8fd9\u4e2a\u662f","title":"\u539f\u751f\u5206\u5e03\u5f0f\u9501\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#_1","text":"redission \u5b98\u7f51 \u5206\u5e03\u5f0f\u9501\u539f\u751f\u5b9e\u73b0\u6848\u4f8b \u4e00\u6b65\u4e00\u6b65\u8fc7\u5ea6\u5230redission \u8bf8\u845b\u8001\u5e08 Redisson \u5b66\u4e60\u6848\u4f8b","title":"\u53c2\u8003\u8fde\u63a5"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#_2","text":"","title":"\u5b9e\u73b0\u6848\u4f8b"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#redis","text":"","title":"\u539fredis \u9501\u9047\u5230\u7684\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#_3","text":"@GetMapping(\"/test2/lock\") public String test2() { try { Boolean flag = stringRedisTemplate.opsForValue().setIfAbsent(\"lockKey\", \"koala\"); stringRedisTemplate.expire(\"lockKey\", 10, TimeUnit.SECONDS); if (!flag) { log.info(\"\u5f53\u524d\u4eba\u6570\u8fc7\u591a \u6263\u51cf\u5931\u8d25\"); return \"\u5f53\u524d\u4eba\u6570\u8fc7\u591a \u6263\u51cf\u5931\u8d25\"; } int stock = Integer.parseInt(stringRedisTemplate.opsForValue().get(\"stock\")); if (stock > 0) { int realLock = stock - 1; stringRedisTemplate.opsForValue().set(\"stock\", realLock + \"\"); log.info(\"\u6263\u51cf\u6210\u529f \u5269\u4f59\u5e93\u5b58{}\", realLock); } else { log.info(\"\u6263\u51cf\u5931\u8d25 \u5269\u4f59\u5e93\u5b58{}\", stock); } } finally { stringRedisTemplate.delete(\"lockKey\"); } return \"end\"; }","title":"\u4ee3\u7801"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#_4","text":"\u4e0a\u8ff0\u5206\u5e03\u5f0f\u9501\u5df2\u7ecf\u80fd\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\uff0c\u4e0d\u8db3\u4e4b\u5904\u5728\u4e8e\uff0c10\u79d2\u5931\u6548\u4e4b\u524d\u7ebf\u7a0b\u8fd8\u6ca1\u6267\u884c\u5b8c\uff0c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u52a0\u4e86lcokKey\u9501\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u91ca\u653e\u4e86\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u7684\u9501\u3002","title":"\u95ee\u9898"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#redisredisson","text":"https://www.zhihu.com/question/376677241","title":"Redis\u548cRedisson\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#trylock","text":"// Wait for 100 seconds and automatically unlock it after 10 seconds boolean res = lock.tryLock(100, 10, TimeUnit.SECONDS); \u65e0\u6cd5\u5b9e\u73b0 \u83b7\u53d6\u4e0d\u5230\u9501\u7acb\u5373\u8fd4\u56de","title":"trylock \u53c2\u6570\u4f5c\u7528"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E5%8E%9F%E7%94%9F%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/#_5","text":"lock.tryLock()\u4e2dwaittime\u7684\u4e0d\u7406\u89e3 \u8fd9\u4e2a\u662f","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/","text":"\u4ecb\u7ecd \u505a\u4e00\u7c7b\u4e8b\u60c5\u6709\u4e00\u7cfb\u5217\u901a\u7528\u7684\u6b65\u9aa4\uff0c\u6839\u636e\u6bcf\u4e2a\u5bf9\u8c61\u7684\u4e0d\u540c\u53d6\u5b9e\u73b0\u8fd9\u4e00\u4e9b\u901a\u7528\u7684\u65b9\u6cd5\u3002 \u4ee3\u7801 public interface PutIntoFridge { void openFridge(); void putIntoGoods(); void closeFridge(); } /** * \u5927\u8c61\u5904\u7406\u5668 * @author yantingrui * @date 2022/8/15 11:03 */ public class FaTigerDeal extends AbstractDeal{ private Goods goods; @Override public void openFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u6253\u5f00\u51b0\u7bb1\"); } @Override public void putIntoGoods() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668\u628a\"+goods.getName()+\"\u653e\u8fdb\u51b0\u7bb1\"); } @Override public void closeFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u5173\u95ed\u51b0\u7bb1\"); } public FaTigerDeal(String name) { this.goods = new Goods(name); } } public class FaTigerDeal extends AbstractDeal{ private Goods goods; @Override public void openFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u6253\u5f00\u51b0\u7bb1\"); } @Override public void putIntoGoods() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668\u628a\"+goods.getName()+\"\u653e\u8fdb\u51b0\u7bb1\"); } @Override public void closeFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u5173\u95ed\u51b0\u7bb1\"); } public FaTigerDeal(String name) { this.goods = new Goods(name); } } public class Start { public static void main(String[] args) { FaTigerDeal faTigerDeal = new FaTigerDeal(\"tom\"); faTigerDeal.executeOp(); } }","title":"\u6a21\u677f\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/#_1","text":"\u505a\u4e00\u7c7b\u4e8b\u60c5\u6709\u4e00\u7cfb\u5217\u901a\u7528\u7684\u6b65\u9aa4\uff0c\u6839\u636e\u6bcf\u4e2a\u5bf9\u8c61\u7684\u4e0d\u540c\u53d6\u5b9e\u73b0\u8fd9\u4e00\u4e9b\u901a\u7528\u7684\u65b9\u6cd5\u3002","title":"\u4ecb\u7ecd"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/#_2","text":"public interface PutIntoFridge { void openFridge(); void putIntoGoods(); void closeFridge(); } /** * \u5927\u8c61\u5904\u7406\u5668 * @author yantingrui * @date 2022/8/15 11:03 */ public class FaTigerDeal extends AbstractDeal{ private Goods goods; @Override public void openFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u6253\u5f00\u51b0\u7bb1\"); } @Override public void putIntoGoods() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668\u628a\"+goods.getName()+\"\u653e\u8fdb\u51b0\u7bb1\"); } @Override public void closeFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u5173\u95ed\u51b0\u7bb1\"); } public FaTigerDeal(String name) { this.goods = new Goods(name); } } public class FaTigerDeal extends AbstractDeal{ private Goods goods; @Override public void openFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u6253\u5f00\u51b0\u7bb1\"); } @Override public void putIntoGoods() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668\u628a\"+goods.getName()+\"\u653e\u8fdb\u51b0\u7bb1\"); } @Override public void closeFridge() { System.out.println(\"\u80d6\u864e\u5904\u7406\u5668 \u5173\u95ed\u51b0\u7bb1\"); } public FaTigerDeal(String name) { this.goods = new Goods(name); } } public class Start { public static void main(String[] args) { FaTigerDeal faTigerDeal = new FaTigerDeal(\"tom\"); faTigerDeal.executeOp(); } }","title":"\u4ee3\u7801"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u4ecb\u7ecd \u5b9a\u4e49\u5bf9\u8c61\u95f4\u7684\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u5b83\u7684\u5bf9\u8c61\u90fd\u5f97\u5230\u901a\u77e5\u5e76\u88ab\u81ea\u52a8\u66f4\u65b0 \u5e94\u7528\u573a\u666f\uff1a\u64cd\u4f5c\u65e5\u5fd7 \u5b9e\u73b0\u4ee3\u7801 @Data public class Subject { private List<Watcher> watchers = Lists.newLinkedList(); private String name; private String todo; public Subject(String name) { this.name = name; } public void setTodo(String todo) { this.todo = todo; for(Watcher watcher : watchers){ watcher.update(this); } } public void attach(Watcher watcher) { this.watchers.add(watcher); } } public class Watcher { private String name; public Watcher(String name) { this.name = name; } public void update(Subject subject){ System.out.println(String.format(\"%s \u6536\u5230 %s %s \u7684\u901a\u77e5\",name,subject.getName(),subject.getTodo())); } } public class WatcherInfo { public static void main(String[] args) { Subject tom = new Subject(\"Tom\"); tom.attach(new Watcher(\"father\")); tom.attach(new Watcher(\"mother\")); tom.setTodo(\"\u5b66\u4e60\"); } }","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u5b9a\u4e49\u5bf9\u8c61\u95f4\u7684\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u5b83\u7684\u5bf9\u8c61\u90fd\u5f97\u5230\u901a\u77e5\u5e76\u88ab\u81ea\u52a8\u66f4\u65b0 \u5e94\u7528\u573a\u666f\uff1a\u64cd\u4f5c\u65e5\u5fd7","title":"\u4ecb\u7ecd"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"@Data public class Subject { private List<Watcher> watchers = Lists.newLinkedList(); private String name; private String todo; public Subject(String name) { this.name = name; } public void setTodo(String todo) { this.todo = todo; for(Watcher watcher : watchers){ watcher.update(this); } } public void attach(Watcher watcher) { this.watchers.add(watcher); } } public class Watcher { private String name; public Watcher(String name) { this.name = name; } public void update(Subject subject){ System.out.println(String.format(\"%s \u6536\u5230 %s %s \u7684\u901a\u77e5\",name,subject.getName(),subject.getTodo())); } } public class WatcherInfo { public static void main(String[] args) { Subject tom = new Subject(\"Tom\"); tom.attach(new Watcher(\"father\")); tom.attach(new Watcher(\"mother\")); tom.setTodo(\"\u5b66\u4e60\"); } }","title":"\u5b9e\u73b0\u4ee3\u7801"}]}